var hljs=(function(){'use strict';function deepFreeze(obj){if(obj instanceof Map){obj.clear=obj.delete=obj.set=function(){throw new Error('map is read-only')}}else if(obj instanceof Set){obj.add=obj.clear=obj.delete=function(){throw new Error('set is read-only')}}
Object.freeze(obj);Object.getOwnPropertyNames(obj).forEach((name)=>{const prop=obj[name];const type=typeof prop;if((type==='object'||type==='function')&&!Object.isFrozen(prop)){deepFreeze(prop)}});return obj}
class Response{constructor(mode){if(mode.data===undefined)mode.data={};this.data=mode.data;this.isMatchIgnored=!1}
ignoreMatch(){this.isMatchIgnored=!0}}
function escapeHTML(value){return value.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#x27;')}
function inherit$1(original,...objects){const result=Object.create(null);for(const key in original){result[key]=original[key]}
objects.forEach(function(obj){for(const key in obj){result[key]=obj[key]}});return(result)}
const SPAN_CLOSE='</span>';const emitsWrappingTags=(node)=>{return!!node.scope};const scopeToCSSClass=(name,{prefix})=>{if(name.startsWith("language:")){return name.replace("language:","language-")}
if(name.includes(".")){const pieces=name.split(".");return[`${prefix}${pieces.shift()}`,...(pieces.map((x,i)=>`${x}${"_".repeat(i + 1)}`))].join(" ")}
return `${prefix}${name}`};class HTMLRenderer{constructor(parseTree,options){this.buffer="";this.classPrefix=options.classPrefix;parseTree.walk(this)}
addText(text){this.buffer+=escapeHTML(text)}
openNode(node){if(!emitsWrappingTags(node))return;const className=scopeToCSSClass(node.scope,{prefix:this.classPrefix});this.span(className)}
closeNode(node){if(!emitsWrappingTags(node))return;this.buffer+=SPAN_CLOSE}
value(){return this.buffer}
span(className){this.buffer+=`<span class="${className}">`}}
const newNode=(opts={})=>{const result={children:[]};Object.assign(result,opts);return result};class TokenTree{constructor(){this.rootNode=newNode();this.stack=[this.rootNode]}
get top(){return this.stack[this.stack.length-1]}
get root(){return this.rootNode}
add(node){this.top.children.push(node)}
openNode(scope){const node=newNode({scope});this.add(node);this.stack.push(node)}
closeNode(){if(this.stack.length>1){return this.stack.pop()}
return undefined}
closeAllNodes(){while(this.closeNode());}
toJSON(){return JSON.stringify(this.rootNode,null,4)}
walk(builder){return this.constructor._walk(builder,this.rootNode)}
static _walk(builder,node){if(typeof node==="string"){builder.addText(node)}else if(node.children){builder.openNode(node);node.children.forEach((child)=>this._walk(builder,child));builder.closeNode(node)}
return builder}
static _collapse(node){if(typeof node==="string")return;if(!node.children)return;if(node.children.every(el=>typeof el==="string")){node.children=[node.children.join("")]}else{node.children.forEach((child)=>{TokenTree._collapse(child)})}}}
class TokenTreeEmitter extends TokenTree{constructor(options){super();this.options=options}
addText(text){if(text===""){return}
this.add(text)}
startScope(scope){this.openNode(scope)}
endScope(){this.closeNode()}
__addSublanguage(emitter,name){const node=emitter.root;if(name)node.scope=`language:${name}`;this.add(node)}
toHTML(){const renderer=new HTMLRenderer(this,this.options);return renderer.value()}
finalize(){this.closeAllNodes();return!0}}
function source(re){if(!re)return null;if(typeof re==="string")return re;return re.source}
function lookahead(re){return concat('(?=',re,')')}
function anyNumberOfTimes(re){return concat('(?:',re,')*')}
function optional(re){return concat('(?:',re,')?')}
function concat(...args){const joined=args.map((x)=>source(x)).join("");return joined}
function stripOptionsFromArgs(args){const opts=args[args.length-1];if(typeof opts==='object'&&opts.constructor===Object){args.splice(args.length-1,1);return opts}else{return{}}}
function either(...args){const opts=stripOptionsFromArgs(args);const joined='('+(opts.capture?"":"?:")+args.map((x)=>source(x)).join("|")+")";return joined}
function countMatchGroups(re){return(new RegExp(re.toString()+'|')).exec('').length-1}
function startsWith(re,lexeme){const match=re&&re.exec(lexeme);return match&&match.index===0}
const BACKREF_RE=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function _rewriteBackreferences(regexps,{joinWith}){let numCaptures=0;return regexps.map((regex)=>{numCaptures+=1;const offset=numCaptures;let re=source(regex);let out='';while(re.length>0){const match=BACKREF_RE.exec(re);if(!match){out+=re;break}
out+=re.substring(0,match.index);re=re.substring(match.index+match[0].length);if(match[0][0]==='\\'&&match[1]){out+='\\'+String(Number(match[1])+offset)}else{out+=match[0];if(match[0]==='('){numCaptures++}}}
return out}).map(re=>`(${re})`).join(joinWith)}
const MATCH_NOTHING_RE=/\b\B/;const IDENT_RE='[a-zA-Z]\\w*';const UNDERSCORE_IDENT_RE='[a-zA-Z_]\\w*';const NUMBER_RE='\\b\\d+(\\.\\d+)?';const C_NUMBER_RE='(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)';const BINARY_NUMBER_RE='\\b(0b[01]+)';const RE_STARTERS_RE='!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';const SHEBANG=(opts={})=>{const beginShebang=/^#![ ]*\//;if(opts.binary){opts.begin=concat(beginShebang,/.*\b/,opts.binary,/\b.*/)}
return inherit$1({scope:'meta',begin:beginShebang,end:/$/,relevance:0,"on:begin":(m,resp)=>{if(m.index!==0)resp.ignoreMatch();}},opts)};const BACKSLASH_ESCAPE={begin:'\\\\[\\s\\S]',relevance:0};const APOS_STRING_MODE={scope:'string',begin:'\'',end:'\'',illegal:'\\n',contains:[BACKSLASH_ESCAPE]};const QUOTE_STRING_MODE={scope:'string',begin:'"',end:'"',illegal:'\\n',contains:[BACKSLASH_ESCAPE]};const PHRASAL_WORDS_MODE={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/};const COMMENT=function(begin,end,modeOptions={}){const mode=inherit$1({scope:'comment',begin,end,contains:[]},modeOptions);mode.contains.push({scope:'doctag',begin:'[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const ENGLISH_WORD=either("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc
      /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.
      /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences
    );
    // looking like plain text, more likely to be a comment
    mode.contains.push(
      {
        // TODO: how to include ", (, ) without breaking grammars that use these for
        // comment delimiters?
        // begin: /[ ]+([()"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()":]?([.][ ]|[ ]|\))){3}/
        // ---

        // this tries to find sequences of 3 english words in a row (without any
        // "programming" type syntax) this gives us a strong signal that we've
        // TRULY found a comment - vs perhaps scanning with the wrong language.
        // It's possible to find something that LOOKS like the start of the
        // comment - but then if there is no readable text - good chance it is a
        // false match and not a comment.
        //
        // for a visual example please see:
        // https://github.com/highlightjs/highlight.js/issues/2827

        begin: concat(
          /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */
          '(',
          ENGLISH_WORD,
          /[.]?[:]?([.][ ]|[ ])/,
          '){3}') // look for 3 words in a row
      }
    );
    return mode;
  };
  const C_LINE_COMMENT_MODE = COMMENT('//', '$');
  const C_BLOCK_COMMENT_MODE = COMMENT('/\\*', '\\*/');
  const HASH_COMMENT_MODE = COMMENT('#', '$');
  const NUMBER_MODE = {
    scope: 'number',
    begin: NUMBER_RE,
    relevance: 0
  };
  const C_NUMBER_MODE = {
    scope: 'number',
    begin: C_NUMBER_RE,
    relevance: 0
  };
  const BINARY_NUMBER_MODE = {
    scope: 'number',
    begin: BINARY_NUMBER_RE,
    relevance: 0
  };
  const REGEXP_MODE = {
    scope: "regexp",
    begin: /\/(?=[^/\n]*\/)/,
    end: /\/[gimuy]*/,
    contains: [
      BACKSLASH_ESCAPE,
      {
        begin: /\[/,
        end: /\]/,
        relevance: 0,
        contains: [BACKSLASH_ESCAPE]
      }
    ]
  };
  const TITLE_MODE = {
    scope: 'title',
    begin: IDENT_RE,
    relevance: 0
  };
  const UNDERSCORE_TITLE_MODE = {
    scope: 'title',
    begin: UNDERSCORE_IDENT_RE,
    relevance: 0
  };
  const METHOD_GUARD = {
    // excludes method names from keyword processing
    begin: '\\.\\s*' + UNDERSCORE_IDENT_RE,
    relevance: 0
  };

  /**
   * Adds end same as begin mechanics to a mode
   *
   * Your mode must include at least a single () match group as that first match
   * group is what is used for comparison
   * @param {Partial<Mode>} mode
   */
  const END_SAME_AS_BEGIN = function(mode) {
    return Object.assign(mode,
      {
        /** @type {ModeCallback} */
        'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },
        /** @type {ModeCallback} */
        'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }
      });
  };

  var MODES = /*#__PURE__*/Object.freeze({
    __proto__: null,
    APOS_STRING_MODE: APOS_STRING_MODE,
    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,
    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,
    BINARY_NUMBER_RE: BINARY_NUMBER_RE,
    COMMENT: COMMENT,
    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,
    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,
    C_NUMBER_MODE: C_NUMBER_MODE,
    C_NUMBER_RE: C_NUMBER_RE,
    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN,
    HASH_COMMENT_MODE: HASH_COMMENT_MODE,
    IDENT_RE: IDENT_RE,
    MATCH_NOTHING_RE: MATCH_NOTHING_RE,
    METHOD_GUARD: METHOD_GUARD,
    NUMBER_MODE: NUMBER_MODE,
    NUMBER_RE: NUMBER_RE,
    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,
    QUOTE_STRING_MODE: QUOTE_STRING_MODE,
    REGEXP_MODE: REGEXP_MODE,
    RE_STARTERS_RE: RE_STARTERS_RE,
    SHEBANG: SHEBANG,
    TITLE_MODE: TITLE_MODE,
    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,
    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE
  });

  /**
  @typedef {import('highlight.js').CallbackResponse} CallbackResponse
  @typedef {import('highlight.js').CompilerExt} CompilerExt
  */

  // Grammar extensions / plugins
  // See: https://github.com/highlightjs/highlight.js/issues/2833

  // Grammar extensions allow "syntactic sugar" to be added to the grammar modes
  // without requiring any underlying changes to the compiler internals.

  // `compileMatch` being the perfect small example of now allowing a grammar
  // author to write `match` when they desire to match a single expression rather
  // than being forced to use `begin`.  The extension then just moves `match` into
  // `begin` when it runs.  Ie, no features have been added, but we've just made
  // the experience of writing (and reading grammars) a little bit nicer.

  // ------

  // TODO: We need negative look-behind support to do this properly
  /**
   * Skip a match if it has a preceding dot
   *
   * This is used for `beginKeywords` to prevent matching expressions such as
   * `bob.keyword.do()`. The mode compiler automatically wires this up as a
   * special _internal_ 'on:begin' callback for modes with `beginKeywords`
   * @param {RegExpMatchArray} match
   * @param {CallbackResponse} response
   */
  function skipIfHasPrecedingDot(match, response) {
    const before = match.input[match.index - 1];
    if (before === ".") {
      response.ignoreMatch();
    }
  }

  /**
   *
   * @type {CompilerExt}
   */
  function scopeClassName(mode, _parent) {
    // eslint-disable-next-line no-undefined
    if (mode.className !== undefined) {
      mode.scope = mode.className;
      delete mode.className;
    }
  }

  /**
   * `beginKeywords` syntactic sugar
   * @type {CompilerExt}
   */
  function beginKeywords(mode, parent) {
    if (!parent) return;
    if (!mode.beginKeywords) return;

    // for languages with keywords that include non-word characters checking for
    // a word boundary is not sufficient, so instead we check for a word boundary
    // or whitespace - this does no harm in any case since our keyword engine
    // doesn't allow spaces in keywords anyways and we still check for the boundary
    // first
    mode.begin = '\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\.)(?=\\b|\\s)';
    mode.__beforeBegin = skipIfHasPrecedingDot;
    mode.keywords = mode.keywords || mode.beginKeywords;
    delete mode.beginKeywords;

    // prevents double relevance, the keywords themselves provide
    // relevance, the mode doesn't need to double it
    // eslint-disable-next-line no-undefined
    if (mode.relevance === undefined) mode.relevance = 0;
  }

  /**
   * Allow `illegal` to contain an array of illegal values
   * @type {CompilerExt}
   */
  function compileIllegal(mode, _parent) {
    if (!Array.isArray(mode.illegal)) return;

    mode.illegal = either(...mode.illegal);
  }

  /**
   * `match` to match a single expression for readability
   * @type {CompilerExt}
   */
  function compileMatch(mode, _parent) {
    if (!mode.match) return;
    if (mode.begin || mode.end) throw new Error("begin&end are not supported with match");

    mode.begin = mode.match;
    delete mode.match;
  }

  /**
   * provides the default 1 relevance to all modes
   * @type {CompilerExt}
   */
  function compileRelevance(mode, _parent) {
    // eslint-disable-next-line no-undefined
    if (mode.relevance === undefined) mode.relevance = 1;
  }

  // allow beforeMatch to act as a "qualifier" for the match
  // the full match begin must be [beforeMatch][begin]
  const beforeMatchExt = (mode, parent) => {
    if (!mode.beforeMatch) return;
    // starts conflicts with endsParent which we need to make sure the child
    // rule is not matched multiple times
    if (mode.starts) throw new Error("beforeMatch cannot be used with starts");

    const originalMode = Object.assign({}, mode);
    Object.keys(mode).forEach((key) => { delete mode[key]; });

    mode.keywords = originalMode.keywords;
    mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));
    mode.starts = {
      relevance: 0,
      contains: [
        Object.assign(originalMode, { endsParent: true })
      ]
    };
    mode.relevance = 0;

    delete originalMode.beforeMatch;
  };

  // keywords that should have no default relevance value
  const COMMON_KEYWORDS = [
    'of',
    'and',
    'for',
    'in',
    'not',
    'or',
    'if',
    'then',
    'parent', // common variable name
    'list', // common variable name
    'value' // common variable name
  ];

  const DEFAULT_KEYWORD_SCOPE = "keyword";

  /**
   * Given raw keywords from a language definition, compile them.
   *
   * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords
   * @param {boolean} caseInsensitive
   */
  function compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {
    /** @type {import("highlight.js/private").KeywordDict} */
const compiledKeywords=Object.create(null);if(typeof rawKeywords==='string'){compileList(scopeName,rawKeywords.split(" "))}else if(Array.isArray(rawKeywords)){compileList(scopeName,rawKeywords)}else{Object.keys(rawKeywords).forEach(function(scopeName){Object.assign(compiledKeywords,compileKeywords(rawKeywords[scopeName],caseInsensitive,scopeName))})}
return compiledKeywords;function compileList(scopeName,keywordList){if(caseInsensitive){keywordList=keywordList.map(x=>x.toLowerCase())}
keywordList.forEach(function(keyword){const pair=keyword.split('|');compiledKeywords[pair[0]]=[scopeName,scoreForKeyword(pair[0],pair[1])]})}}
function scoreForKeyword(keyword,providedScore){if(providedScore){return Number(providedScore)}
return commonKeyword(keyword)?0:1}
function commonKeyword(keyword){return COMMON_KEYWORDS.includes(keyword.toLowerCase())}
const seenDeprecations={};const error=(message)=>{};const warn=(message,...args)=>{};const deprecated=(version,message)=>{if(seenDeprecations[`${version}/${message}`])return;seenDeprecations[`${version}/${message}`]=!0};const MultiClassError=new Error();function remapScopeNames(mode,regexes,{key}){let offset=0;const scopeNames=mode[key];const emit={};const positions={};for(let i=1;i<=regexes.length;i++){positions[i+offset]=scopeNames[i];emit[i+offset]=!0;offset+=countMatchGroups(regexes[i-1])}
mode[key]=positions;mode[key]._emit=emit;mode[key]._multi=!0}
function beginMultiClass(mode){if(!Array.isArray(mode.begin))return;if(mode.skip||mode.excludeBegin||mode.returnBegin){error("skip, excludeBegin, returnBegin not compatible with beginScope: {}");throw MultiClassError}
if(typeof mode.beginScope!=="object"||mode.beginScope===null){error("beginScope must be object");throw MultiClassError}
remapScopeNames(mode,mode.begin,{key:"beginScope"});mode.begin=_rewriteBackreferences(mode.begin,{joinWith:""})}
function endMultiClass(mode){if(!Array.isArray(mode.end))return;if(mode.skip||mode.excludeEnd||mode.returnEnd){error("skip, excludeEnd, returnEnd not compatible with endScope: {}");throw MultiClassError}
if(typeof mode.endScope!=="object"||mode.endScope===null){error("endScope must be object");throw MultiClassError}
remapScopeNames(mode,mode.end,{key:"endScope"});mode.end=_rewriteBackreferences(mode.end,{joinWith:""})}
function scopeSugar(mode){if(mode.scope&&typeof mode.scope==="object"&&mode.scope!==null){mode.beginScope=mode.scope;delete mode.scope}}
function MultiClass(mode){scopeSugar(mode);if(typeof mode.beginScope==="string"){mode.beginScope={_wrap:mode.beginScope}}
if(typeof mode.endScope==="string"){mode.endScope={_wrap:mode.endScope}}
beginMultiClass(mode);endMultiClass(mode)}
function compileLanguage(language){function langRe(value,global){return new RegExp(source(value),'m'+(language.case_insensitive?'i':'')+(language.unicodeRegex?'u':'')+(global?'g':''))}
class MultiRegex{constructor(){this.matchIndexes={};this.regexes=[];this.matchAt=1;this.position=0}
addRule(re,opts){opts.position=this.position++;this.matchIndexes[this.matchAt]=opts;this.regexes.push([opts,re]);this.matchAt+=countMatchGroups(re)+1}
compile(){if(this.regexes.length===0){this.exec=()=>null}
const terminators=this.regexes.map(el=>el[1]);this.matcherRe=langRe(_rewriteBackreferences(terminators,{joinWith:'|'}),!0);this.lastIndex=0}
exec(s){this.matcherRe.lastIndex=this.lastIndex;const match=this.matcherRe.exec(s);if(!match){return null}
const i=match.findIndex((el,i)=>i>0&&el!==undefined);const matchData=this.matchIndexes[i];match.splice(0,i);return Object.assign(match,matchData)}}
class ResumableMultiRegex{constructor(){this.rules=[];this.multiRegexes=[];this.count=0;this.lastIndex=0;this.regexIndex=0}
getMatcher(index){if(this.multiRegexes[index])return this.multiRegexes[index];const matcher=new MultiRegex();this.rules.slice(index).forEach(([re,opts])=>matcher.addRule(re,opts));matcher.compile();this.multiRegexes[index]=matcher;return matcher}
resumingScanAtSamePosition(){return this.regexIndex!==0}
considerAll(){this.regexIndex=0}
addRule(re,opts){this.rules.push([re,opts]);if(opts.type==="begin")this.count++}
exec(s){const m=this.getMatcher(this.regexIndex);m.lastIndex=this.lastIndex;let result=m.exec(s);if(this.resumingScanAtSamePosition()){if(result&&result.index===this.lastIndex);else{const m2=this.getMatcher(0);m2.lastIndex=this.lastIndex+1;result=m2.exec(s)}}
if(result){this.regexIndex+=result.position+1;if(this.regexIndex===this.count){this.considerAll()}}
return result}}
function buildModeRegex(mode){const mm=new ResumableMultiRegex();mode.contains.forEach(term=>mm.addRule(term.begin,{rule:term,type:"begin"}));if(mode.terminatorEnd){mm.addRule(mode.terminatorEnd,{type:"end"})}
if(mode.illegal){mm.addRule(mode.illegal,{type:"illegal"})}
return mm}
function compileMode(mode,parent){const cmode=(mode);if(mode.isCompiled)return cmode;[scopeClassName,compileMatch,MultiClass,beforeMatchExt].forEach(ext=>ext(mode,parent));language.compilerExtensions.forEach(ext=>ext(mode,parent));mode.__beforeBegin=null;[beginKeywords,compileIllegal,compileRelevance].forEach(ext=>ext(mode,parent));mode.isCompiled=!0;let keywordPattern=null;if(typeof mode.keywords==="object"&&mode.keywords.$pattern){mode.keywords=Object.assign({},mode.keywords);keywordPattern=mode.keywords.$pattern;delete mode.keywords.$pattern}
keywordPattern=keywordPattern||/\w+/;if(mode.keywords){mode.keywords=compileKeywords(mode.keywords,language.case_insensitive)}
cmode.keywordPatternRe=langRe(keywordPattern,!0);if(parent){if(!mode.begin)mode.begin=/\B|\b/;cmode.beginRe=langRe(cmode.begin);if(!mode.end&&!mode.endsWithParent)mode.end=/\B|\b/;if(mode.end)cmode.endRe=langRe(cmode.end);cmode.terminatorEnd=source(cmode.end)||'';if(mode.endsWithParent&&parent.terminatorEnd){cmode.terminatorEnd+=(mode.end?'|':'')+parent.terminatorEnd}}
if(mode.illegal)cmode.illegalRe=langRe((mode.illegal));if(!mode.contains)mode.contains=[];mode.contains=[].concat(...mode.contains.map(function(c){return expandOrCloneMode(c==='self'?mode:c)}));mode.contains.forEach(function(c){compileMode((c),cmode)});if(mode.starts){compileMode(mode.starts,parent)}
cmode.matcher=buildModeRegex(cmode);return cmode}
if(!language.compilerExtensions)language.compilerExtensions=[];if(language.contains&&language.contains.includes('self')){throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.")}
language.classNameAliases=inherit$1(language.classNameAliases||{});return compileMode((language))}
function dependencyOnParent(mode){if(!mode)return!1;return mode.endsWithParent||dependencyOnParent(mode.starts)}
function expandOrCloneMode(mode){if(mode.variants&&!mode.cachedVariants){mode.cachedVariants=mode.variants.map(function(variant){return inherit$1(mode,{variants:null},variant)})}
if(mode.cachedVariants){return mode.cachedVariants}
if(dependencyOnParent(mode)){return inherit$1(mode,{starts:mode.starts?inherit$1(mode.starts):null})}
if(Object.isFrozen(mode)){return inherit$1(mode)}
return mode}
var version="11.9.0";class HTMLInjectionError extends Error{constructor(reason,html){super(reason);this.name="HTMLInjectionError";this.html=html}}
const escape=escapeHTML;const inherit=inherit$1;const NO_MATCH=Symbol("nomatch");const MAX_KEYWORD_HITS=7;const HLJS=function(hljs){const languages=Object.create(null);const aliases=Object.create(null);const plugins=[];let SAFE_MODE=!0;const LANGUAGE_NOT_FOUND="Could not find the language '{}', did you forget to load/include a language module?";const PLAINTEXT_LANGUAGE={disableAutodetect:!0,name:'Plain text',contains:[]};let options={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:'hljs-',cssSelector:'pre code',languages:null,__emitter:TokenTreeEmitter};function shouldNotHighlight(languageName){return options.noHighlightRe.test(languageName)}
function blockLanguage(block){let classes=block.className+' ';classes+=block.parentNode?block.parentNode.className:'';const match=options.languageDetectRe.exec(classes);if(match){const language=getLanguage(match[1]);if(!language){warn(LANGUAGE_NOT_FOUND.replace("{}",match[1]));warn("Falling back to no-highlight mode for this block.",block)}
return language?match[1]:'no-highlight'}
return classes.split(/\s+/).find((_class)=>shouldNotHighlight(_class)||getLanguage(_class))}
function highlight(codeOrLanguageName,optionsOrCode,ignoreIllegals){let code="";let languageName="";if(typeof optionsOrCode==="object"){code=codeOrLanguageName;ignoreIllegals=optionsOrCode.ignoreIllegals;languageName=optionsOrCode.language}else{deprecated("10.7.0","highlight(lang, code, ...args) has been deprecated.");deprecated("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277");languageName=codeOrLanguageName;code=optionsOrCode}
if(ignoreIllegals===undefined){ignoreIllegals=!0}
const context={code,language:languageName};fire("before:highlight",context);const result=context.result?context.result:_highlight(context.language,context.code,ignoreIllegals);result.code=context.code;fire("after:highlight",result);return result}
function _highlight(languageName,codeToHighlight,ignoreIllegals,continuation){const keywordHits=Object.create(null);function keywordData(mode,matchText){return mode.keywords[matchText]}
function processKeywords(){if(!top.keywords){emitter.addText(modeBuffer);return}
let lastIndex=0;top.keywordPatternRe.lastIndex=0;let match=top.keywordPatternRe.exec(modeBuffer);let buf="";while(match){buf+=modeBuffer.substring(lastIndex,match.index);const word=language.case_insensitive?match[0].toLowerCase():match[0];const data=keywordData(top,word);if(data){const[kind,keywordRelevance]=data;emitter.addText(buf);buf="";keywordHits[word]=(keywordHits[word]||0)+1;if(keywordHits[word]<=MAX_KEYWORD_HITS)relevance+=keywordRelevance;if(kind.startsWith("_")){buf+=match[0]}else{const cssClass=language.classNameAliases[kind]||kind;emitKeyword(match[0],cssClass)}}else{buf+=match[0]}
lastIndex=top.keywordPatternRe.lastIndex;match=top.keywordPatternRe.exec(modeBuffer)}
buf+=modeBuffer.substring(lastIndex);emitter.addText(buf)}
function processSubLanguage(){if(modeBuffer==="")return;let result=null;if(typeof top.subLanguage==='string'){if(!languages[top.subLanguage]){emitter.addText(modeBuffer);return}
result=_highlight(top.subLanguage,modeBuffer,!0,continuations[top.subLanguage]);continuations[top.subLanguage]=(result._top)}else{result=highlightAuto(modeBuffer,top.subLanguage.length?top.subLanguage:null)}
if(top.relevance>0){relevance+=result.relevance}
emitter.__addSublanguage(result._emitter,result.language)}
function processBuffer(){if(top.subLanguage!=null){processSubLanguage()}else{processKeywords()}
modeBuffer=''}
function emitKeyword(keyword,scope){if(keyword==="")return;emitter.startScope(scope);emitter.addText(keyword);emitter.endScope()}
function emitMultiClass(scope,match){let i=1;const max=match.length-1;while(i<=max){if(!scope._emit[i]){i++;continue}
const klass=language.classNameAliases[scope[i]]||scope[i];const text=match[i];if(klass){emitKeyword(text,klass)}else{modeBuffer=text;processKeywords();modeBuffer=""}
i++}}
function startNewMode(mode,match){if(mode.scope&&typeof mode.scope==="string"){emitter.openNode(language.classNameAliases[mode.scope]||mode.scope)}
if(mode.beginScope){if(mode.beginScope._wrap){emitKeyword(modeBuffer,language.classNameAliases[mode.beginScope._wrap]||mode.beginScope._wrap);modeBuffer=""}else if(mode.beginScope._multi){emitMultiClass(mode.beginScope,match);modeBuffer=""}}
top=Object.create(mode,{parent:{value:top}});return top}
function endOfMode(mode,match,matchPlusRemainder){let matched=startsWith(mode.endRe,matchPlusRemainder);if(matched){if(mode["on:end"]){const resp=new Response(mode);mode["on:end"](match,resp);if(resp.isMatchIgnored)matched=!1}
if(matched){while(mode.endsParent&&mode.parent){mode=mode.parent}
return mode}}
if(mode.endsWithParent){return endOfMode(mode.parent,match,matchPlusRemainder)}}
function doIgnore(lexeme){if(top.matcher.regexIndex===0){modeBuffer+=lexeme[0];return 1}else{resumeScanAtSamePosition=!0;return 0}}
function doBeginMatch(match){const lexeme=match[0];const newMode=match.rule;const resp=new Response(newMode);const beforeCallbacks=[newMode.__beforeBegin,newMode["on:begin"]];for(const cb of beforeCallbacks){if(!cb)continue;cb(match,resp);if(resp.isMatchIgnored)return doIgnore(lexeme);}
if(newMode.skip){modeBuffer+=lexeme}else{if(newMode.excludeBegin){modeBuffer+=lexeme}
processBuffer();if(!newMode.returnBegin&&!newMode.excludeBegin){modeBuffer=lexeme}}
startNewMode(newMode,match);return newMode.returnBegin?0:lexeme.length}
function doEndMatch(match){const lexeme=match[0];const matchPlusRemainder=codeToHighlight.substring(match.index);const endMode=endOfMode(top,match,matchPlusRemainder);if(!endMode){return NO_MATCH}
const origin=top;if(top.endScope&&top.endScope._wrap){processBuffer();emitKeyword(lexeme,top.endScope._wrap)}else if(top.endScope&&top.endScope._multi){processBuffer();emitMultiClass(top.endScope,match)}else if(origin.skip){modeBuffer+=lexeme}else{if(!(origin.returnEnd||origin.excludeEnd)){modeBuffer+=lexeme}
processBuffer();if(origin.excludeEnd){modeBuffer=lexeme}}
do{if(top.scope){emitter.closeNode()}
if(!top.skip&&!top.subLanguage){relevance+=top.relevance}
top=top.parent}while(top!==endMode.parent);if(endMode.starts){startNewMode(endMode.starts,match)}
return origin.returnEnd?0:lexeme.length}
function processContinuations(){const list=[];for(let current=top;current!==language;current=current.parent){if(current.scope){list.unshift(current.scope)}}
list.forEach(item=>emitter.openNode(item))}
let lastMatch={};function processLexeme(textBeforeMatch,match){const lexeme=match&&match[0];modeBuffer+=textBeforeMatch;if(lexeme==null){processBuffer();return 0}
if(lastMatch.type==="begin"&&match.type==="end"&&lastMatch.index===match.index&&lexeme===""){modeBuffer+=codeToHighlight.slice(match.index,match.index+1);if(!SAFE_MODE){const err=new Error(`0 width match regex (${languageName})`);err.languageName=languageName;err.badRule=lastMatch.rule;throw err}
return 1}
lastMatch=match;if(match.type==="begin"){return doBeginMatch(match)}else if(match.type==="illegal"&&!ignoreIllegals){const err=new Error('Illegal lexeme "'+lexeme+'" for mode "'+(top.scope||'<unnamed>')+'"');err.mode=top;throw err}else if(match.type==="end"){const processed=doEndMatch(match);if(processed!==NO_MATCH){return processed}}
if(match.type==="illegal"&&lexeme===""){return 1}
if(iterations>100000&&iterations>match.index*3){const err=new Error('potential infinite loop, way more iterations than matches');throw err}
modeBuffer+=lexeme;return lexeme.length}
const language=getLanguage(languageName);if(!language){error(LANGUAGE_NOT_FOUND.replace("{}",languageName));throw new Error('Unknown language: "'+languageName+'"')}
const md=compileLanguage(language);let result='';let top=continuation||md;const continuations={};const emitter=new options.__emitter(options);processContinuations();let modeBuffer='';let relevance=0;let index=0;let iterations=0;let resumeScanAtSamePosition=!1;try{if(!language.__emitTokens){top.matcher.considerAll();for(;;){iterations++;if(resumeScanAtSamePosition){resumeScanAtSamePosition=!1}else{top.matcher.considerAll()}
top.matcher.lastIndex=index;const match=top.matcher.exec(codeToHighlight);if(!match)break;const beforeMatch=codeToHighlight.substring(index,match.index);const processedCount=processLexeme(beforeMatch,match);index=match.index+processedCount}
processLexeme(codeToHighlight.substring(index))}else{language.__emitTokens(codeToHighlight,emitter)}
emitter.finalize();result=emitter.toHTML();return{language:languageName,value:result,relevance,illegal:!1,_emitter:emitter,_top:top}}catch(err){if(err.message&&err.message.includes('Illegal')){return{language:languageName,value:escape(codeToHighlight),illegal:!0,relevance:0,_illegalBy:{message:err.message,index,context:codeToHighlight.slice(index-100,index+100),mode:err.mode,resultSoFar:result},_emitter:emitter}}else if(SAFE_MODE){return{language:languageName,value:escape(codeToHighlight),illegal:!1,relevance:0,errorRaised:err,_emitter:emitter,_top:top}}else{throw err}}}
function justTextHighlightResult(code){const result={value:escape(code),illegal:!1,relevance:0,_top:PLAINTEXT_LANGUAGE,_emitter:new options.__emitter(options)};result._emitter.addText(code);return result}
function highlightAuto(code,languageSubset){languageSubset=languageSubset||options.languages||Object.keys(languages);const plaintext=justTextHighlightResult(code);const results=languageSubset.filter(getLanguage).filter(autoDetection).map(name=>_highlight(name,code,!1));results.unshift(plaintext);const sorted=results.sort((a,b)=>{if(a.relevance!==b.relevance)return b.relevance-a.relevance;if(a.language&&b.language){if(getLanguage(a.language).supersetOf===b.language){return 1}else if(getLanguage(b.language).supersetOf===a.language){return-1}}
return 0});const[best,secondBest]=sorted;const result=best;result.secondBest=secondBest;return result}
function updateClassName(element,currentLang,resultLang){const language=(currentLang&&aliases[currentLang])||resultLang;element.classList.add("hljs");element.classList.add(`language-${language}`)}
function highlightElement(element){let node=null;const language=blockLanguage(element);if(shouldNotHighlight(language))return;fire("before:highlightElement",{el:element,language});if(element.dataset.highlighted){return}
if(element.children.length>0){if(options.throwUnescapedHTML){const err=new HTMLInjectionError("One of your code blocks includes unescaped HTML.",element.innerHTML);throw err}}
node=element;const text=node.textContent;const result=language?highlight(text,{language,ignoreIllegals:!0}):highlightAuto(text);element.innerHTML=result.value;element.dataset.highlighted="yes";updateClassName(element,language,result.language);element.result={language:result.language,re:result.relevance,relevance:result.relevance};if(result.secondBest){element.secondBest={language:result.secondBest.language,relevance:result.secondBest.relevance}}
fire("after:highlightElement",{el:element,result,text})}
function configure(userOptions){options=inherit(options,userOptions)}
const initHighlighting=()=>{highlightAll();deprecated("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")};function initHighlightingOnLoad(){highlightAll();deprecated("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}
let wantsHighlight=!1;function highlightAll(){if(document.readyState==="loading"){wantsHighlight=!0;return}
const blocks=document.querySelectorAll(options.cssSelector);blocks.forEach(highlightElement)}
function boot(){if(wantsHighlight)highlightAll();}
if(typeof window!=='undefined'&&window.addEventListener){window.addEventListener('DOMContentLoaded',boot,!1)}
function registerLanguage(languageName,languageDefinition){let lang=null;try{lang=languageDefinition(hljs)}catch(error$1){error("Language definition for '{}' could not be registered.".replace("{}",languageName));if(!SAFE_MODE){throw error$1}else{error(error$1)}
lang=PLAINTEXT_LANGUAGE}
if(!lang.name)lang.name=languageName;languages[languageName]=lang;lang.rawDefinition=languageDefinition.bind(null,hljs);if(lang.aliases){registerAliases(lang.aliases,{languageName})}}
function unregisterLanguage(languageName){delete languages[languageName];for(const alias of Object.keys(aliases)){if(aliases[alias]===languageName){delete aliases[alias]}}}
function listLanguages(){return Object.keys(languages)}
function getLanguage(name){name=(name||'').toLowerCase();return languages[name]||languages[aliases[name]]}
function registerAliases(aliasList,{languageName}){if(typeof aliasList==='string'){aliasList=[aliasList]}
aliasList.forEach(alias=>{aliases[alias.toLowerCase()]=languageName})}
function autoDetection(name){const lang=getLanguage(name);return lang&&!lang.disableAutodetect}
function upgradePluginAPI(plugin){if(plugin["before:highlightBlock"]&&!plugin["before:highlightElement"]){plugin["before:highlightElement"]=(data)=>{plugin["before:highlightBlock"](Object.assign({block:data.el},data))}}
if(plugin["after:highlightBlock"]&&!plugin["after:highlightElement"]){plugin["after:highlightElement"]=(data)=>{plugin["after:highlightBlock"](Object.assign({block:data.el},data))}}}
function addPlugin(plugin){upgradePluginAPI(plugin);plugins.push(plugin)}
function removePlugin(plugin){const index=plugins.indexOf(plugin);if(index!==-1){plugins.splice(index,1)}}
function fire(event,args){const cb=event;plugins.forEach(function(plugin){if(plugin[cb]){plugin[cb](args)}})}
function deprecateHighlightBlock(el){deprecated("10.7.0","highlightBlock will be removed entirely in v12.0");deprecated("10.7.0","Please use highlightElement now.");return highlightElement(el)}
Object.assign(hljs,{highlight,highlightAuto,highlightAll,highlightElement,highlightBlock:deprecateHighlightBlock,configure,initHighlighting,initHighlightingOnLoad,registerLanguage,unregisterLanguage,listLanguages,getLanguage,registerAliases,autoDetection,inherit,addPlugin,removePlugin});hljs.debugMode=function(){SAFE_MODE=!1};hljs.safeMode=function(){SAFE_MODE=!0};hljs.versionString=version;hljs.regex={concat:concat,lookahead:lookahead,either:either,optional:optional,anyNumberOfTimes:anyNumberOfTimes};for(const key in MODES){if(typeof MODES[key]==="object"){deepFreeze(MODES[key])}}
Object.assign(hljs,MODES);return hljs};const highlight=HLJS({});highlight.newInstance=()=>HLJS({});return highlight})();if(typeof exports==='object'&&typeof module!=='undefined'){module.exports=hljs}
/*! `bash` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function bash(hljs){const regex=hljs.regex;const VAR={};const BRACED_VAR={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[VAR]}]};Object.assign(VAR,{className:'variable',variants:[{begin:regex.concat(/\$[\w\d#@][\w\d_]*/,`(?![\\w\\d])(?![$])`)},BRACED_VAR]});const SUBST={className:'subst',begin:/\$\(/,end:/\)/,contains:[hljs.BACKSLASH_ESCAPE]};const COMMENT=hljs.inherit(hljs.COMMENT(),{match:[/(^|\s)/,/#.*$/],scope:{2:'comment'}});const HERE_DOC={begin:/<<-?\s*(?=\w+)/,starts:{contains:[hljs.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:'string'})]}};const QUOTE_STRING={className:'string',begin:/"/,end:/"/,contains:[hljs.BACKSLASH_ESCAPE,VAR,SUBST]};SUBST.contains.push(QUOTE_STRING);const ESCAPED_QUOTE={match:/\\"/};const APOS_STRING={className:'string',begin:/'/,end:/'/};const ESCAPED_APOS={match:/\\'/};const ARITHMETIC={begin:/\$?\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},hljs.NUMBER_MODE,VAR]};const SH_LIKE_SHELLS=["fish","bash","zsh","sh","csh","ksh","tcsh","dash","scsh",];const KNOWN_SHEBANG=hljs.SHEBANG({binary:`(${SH_LIKE_SHELLS.join("|")})`,relevance:10});const FUNCTION={className:'function',begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[hljs.inherit(hljs.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};const KEYWORDS=["if","then","else","elif","fi","for","while","until","in","do","done","case","esac","function","select"];const LITERALS=["true","false"];const PATH_MODE={match:/(\/[a-z._-]+)+/};const SHELL_BUILT_INS=["break","cd","continue","eval","exec","exit","export","getopts","hash","pwd","readonly","return","shift","test","times","trap","umask","unset"];const BASH_BUILT_INS=["alias","bind","builtin","caller","command","declare","echo","enable","help","let","local","logout","mapfile","printf","read","readarray","source","type","typeset","ulimit","unalias"];const ZSH_BUILT_INS=["autoload","bg","bindkey","bye","cap","chdir","clone","comparguments","compcall","compctl","compdescribe","compfiles","compgroups","compquote","comptags","comptry","compvalues","dirs","disable","disown","echotc","echoti","emulate","fc","fg","float","functions","getcap","getln","history","integer","jobs","kill","limit","log","noglob","popd","print","pushd","pushln","rehash","sched","setcap","setopt","stat","suspend","ttyctl","unfunction","unhash","unlimit","unsetopt","vared","wait","whence","where","which","zcompile","zformat","zftp","zle","zmodload","zparseopts","zprof","zpty","zregexparse","zsocket","zstyle","ztcp"];const GNU_CORE_UTILS=["chcon","chgrp","chown","chmod","cp","dd","df","dir","dircolors","ln","ls","mkdir","mkfifo","mknod","mktemp","mv","realpath","rm","rmdir","shred","sync","touch","truncate","vdir","b2sum","base32","base64","cat","cksum","comm","csplit","cut","expand","fmt","fold","head","join","md5sum","nl","numfmt","od","paste","ptx","pr","sha1sum","sha224sum","sha256sum","sha384sum","sha512sum","shuf","sort","split","sum","tac","tail","tr","tsort","unexpand","uniq","wc","arch","basename","chroot","date","dirname","du","echo","env","expr","factor","groups","hostid","id","link","logname","nice","nohup","nproc","pathchk","pinky","printenv","printf","pwd","readlink","runcon","seq","sleep","stat","stdbuf","stty","tee","test","timeout","tty","uname","unlink","uptime","users","who","whoami","yes"];return{name:'Bash',aliases:['sh'],keywords:{$pattern:/\b[a-z][a-z0-9._-]+\b/,keyword:KEYWORDS,literal:LITERALS,built_in:[...SHELL_BUILT_INS,...BASH_BUILT_INS,"set","shopt",...ZSH_BUILT_INS,...GNU_CORE_UTILS]},contains:[KNOWN_SHEBANG,hljs.SHEBANG(),FUNCTION,ARITHMETIC,COMMENT,HERE_DOC,PATH_MODE,QUOTE_STRING,ESCAPED_QUOTE,APOS_STRING,ESCAPED_APOS,VAR]}}
return bash})();hljs.registerLanguage('bash',hljsGrammar)})();/*! `c` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function c(hljs){const regex=hljs.regex;const C_LINE_COMMENT_MODE=hljs.COMMENT('//','$',{contains:[{begin:/\\\n/}]});const DECLTYPE_AUTO_RE='decltype\\(auto\\)';const NAMESPACE_RE='[a-zA-Z_]\\w*::';const TEMPLATE_ARGUMENT_RE='<[^<>]+>';const FUNCTION_TYPE_RE='('+DECLTYPE_AUTO_RE+'|'+regex.optional(NAMESPACE_RE)+'[a-zA-Z_]\\w*'+regex.optional(TEMPLATE_ARGUMENT_RE)+')';const TYPES={className:'type',variants:[{begin:'\\b[a-z\\d_]*_t\\b'},{match:/\batomic_[a-z]{3,6}\b/}]};const CHARACTER_ESCAPES='\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';const STRINGS={className:'string',variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:'\\n',contains:[hljs.BACKSLASH_ESCAPE]},{begin:'(u8?|U|L)?\'('+CHARACTER_ESCAPES+"|.)",end:'\'',illegal:'.'},hljs.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]};const NUMBERS={className:'number',variants:[{begin:'\\b(0b[01\']+)'},{begin:'(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'},{begin:'(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'}],relevance:0};const PREPROCESSOR={className:'meta',begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:'if else elif endif define undef warning error line '+'pragma _Pragma ifdef ifndef include'},contains:[{begin:/\\\n/,relevance:0},hljs.inherit(STRINGS,{className:'string'}),{className:'string',begin:/<.*?>/},C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]};const TITLE_MODE={className:'title',begin:regex.optional(NAMESPACE_RE)+hljs.IDENT_RE,relevance:0};const FUNCTION_TITLE=regex.optional(NAMESPACE_RE)+hljs.IDENT_RE+'\\s*\\(';const C_KEYWORDS=["asm","auto","break","case","continue","default","do","else","enum","extern","for","fortran","goto","if","inline","register","restrict","return","sizeof","struct","switch","typedef","union","volatile","while","_Alignas","_Alignof","_Atomic","_Generic","_Noreturn","_Static_assert","_Thread_local","alignas","alignof","noreturn","static_assert","thread_local","_Pragma"];const C_TYPES=["float","double","signed","unsigned","int","short","long","char","void","_Bool","_Complex","_Imaginary","_Decimal32","_Decimal64","_Decimal128","const","static","complex","bool","imaginary"];const KEYWORDS={keyword:C_KEYWORDS,type:C_TYPES,literal:'true false NULL',built_in:'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '+'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '+'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '+'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '+'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '+'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '+'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '+'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '+'vfprintf vprintf vsprintf endl initializer_list unique_ptr',};const EXPRESSION_CONTAINS=[PREPROCESSOR,TYPES,C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,NUMBERS,STRINGS];const EXPRESSION_CONTEXT={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:'new throw return else',end:/;/}],keywords:KEYWORDS,contains:EXPRESSION_CONTAINS.concat([{begin:/\(/,end:/\)/,keywords:KEYWORDS,contains:EXPRESSION_CONTAINS.concat(['self']),relevance:0}]),relevance:0};const FUNCTION_DECLARATION={begin:'('+FUNCTION_TYPE_RE+'[\\*&\\s]+)+'+FUNCTION_TITLE,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:KEYWORDS,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:DECLTYPE_AUTO_RE,keywords:KEYWORDS,relevance:0},{begin:FUNCTION_TITLE,returnBegin:!0,contains:[hljs.inherit(TITLE_MODE,{className:"title.function"})],relevance:0},{relevance:0,match:/,/},{className:'params',begin:/\(/,end:/\)/,keywords:KEYWORDS,relevance:0,contains:[C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,TYPES,{begin:/\(/,end:/\)/,keywords:KEYWORDS,relevance:0,contains:['self',C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,TYPES]}]},TYPES,C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,PREPROCESSOR]};return{name:"C",aliases:['h'],keywords:KEYWORDS,disableAutodetect:!0,illegal:'</',contains:[].concat(EXPRESSION_CONTEXT,FUNCTION_DECLARATION,EXPRESSION_CONTAINS,[PREPROCESSOR,{begin:hljs.IDENT_RE+'::',keywords:KEYWORDS},{className:'class',beginKeywords:'enum class struct union',end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},hljs.TITLE_MODE]}]),exports:{preprocessor:PREPROCESSOR,strings:STRINGS,keywords:KEYWORDS}}}
return c})();hljs.registerLanguage('c',hljsGrammar)})();/*! `cpp` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function cpp(hljs){const regex=hljs.regex;const C_LINE_COMMENT_MODE=hljs.COMMENT('//','$',{contains:[{begin:/\\\n/}]});const DECLTYPE_AUTO_RE='decltype\\(auto\\)';const NAMESPACE_RE='[a-zA-Z_]\\w*::';const TEMPLATE_ARGUMENT_RE='<[^<>]+>';const FUNCTION_TYPE_RE='(?!struct)('+DECLTYPE_AUTO_RE+'|'+regex.optional(NAMESPACE_RE)+'[a-zA-Z_]\\w*'+regex.optional(TEMPLATE_ARGUMENT_RE)+')';const CPP_PRIMITIVE_TYPES={className:'type',begin:'\\b[a-z\\d_]*_t\\b'};const CHARACTER_ESCAPES='\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';const STRINGS={className:'string',variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:'\\n',contains:[hljs.BACKSLASH_ESCAPE]},{begin:'(u8?|U|L)?\'('+CHARACTER_ESCAPES+'|.)',end:'\'',illegal:'.'},hljs.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]};const NUMBERS={className:'number',variants:[{begin:"[+-]?(?:"+"(?:"+"[0-9](?:'?[0-9])*\\.(?:[0-9](?:'?[0-9])*)?"+"|\\.[0-9](?:'?[0-9])*"+")(?:[Ee][+-]?[0-9](?:'?[0-9])*)?"+"|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*"+"|0[Xx](?:"+"[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?"+"|\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*"+")[Pp][+-]?[0-9](?:'?[0-9])*"+")(?:"+"[Ff](?:16|32|64|128)?"+"|(BF|bf)16"+"|[Ll]"+"|"+")"},{begin:"[+-]?\\b(?:"+"0[Bb][01](?:'?[01])*"+"|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*"+"|0(?:'?[0-7])*"+"|[1-9](?:'?[0-9])*"+")(?:"+"[Uu](?:LL?|ll?)"+"|[Uu][Zz]?"+"|(?:LL?|ll?)[Uu]?"+"|[Zz][Uu]"+"|"+")"}],relevance:0};const PREPROCESSOR={className:'meta',begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:'if else elif endif define undef warning error line '+'pragma _Pragma ifdef ifndef include'},contains:[{begin:/\\\n/,relevance:0},hljs.inherit(STRINGS,{className:'string'}),{className:'string',begin:/<.*?>/},C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]};const TITLE_MODE={className:'title',begin:regex.optional(NAMESPACE_RE)+hljs.IDENT_RE,relevance:0};const FUNCTION_TITLE=regex.optional(NAMESPACE_RE)+hljs.IDENT_RE+'\\s*\\(';const RESERVED_KEYWORDS=['alignas','alignof','and','and_eq','asm','atomic_cancel','atomic_commit','atomic_noexcept','auto','bitand','bitor','break','case','catch','class','co_await','co_return','co_yield','compl','concept','const_cast|10','consteval','constexpr','constinit','continue','decltype','default','delete','do','dynamic_cast|10','else','enum','explicit','export','extern','false','final','for','friend','goto','if','import','inline','module','mutable','namespace','new','noexcept','not','not_eq','nullptr','operator','or','or_eq','override','private','protected','public','reflexpr','register','reinterpret_cast|10','requires','return','sizeof','static_assert','static_cast|10','struct','switch','synchronized','template','this','thread_local','throw','transaction_safe','transaction_safe_dynamic','true','try','typedef','typeid','typename','union','using','virtual','volatile','while','xor','xor_eq'];const RESERVED_TYPES=['bool','char','char16_t','char32_t','char8_t','double','float','int','long','short','void','wchar_t','unsigned','signed','const','static'];const TYPE_HINTS=['any','auto_ptr','barrier','binary_semaphore','bitset','complex','condition_variable','condition_variable_any','counting_semaphore','deque','false_type','future','imaginary','initializer_list','istringstream','jthread','latch','lock_guard','multimap','multiset','mutex','optional','ostringstream','packaged_task','pair','promise','priority_queue','queue','recursive_mutex','recursive_timed_mutex','scoped_lock','set','shared_future','shared_lock','shared_mutex','shared_timed_mutex','shared_ptr','stack','string_view','stringstream','timed_mutex','thread','true_type','tuple','unique_lock','unique_ptr','unordered_map','unordered_multimap','unordered_multiset','unordered_set','variant','vector','weak_ptr','wstring','wstring_view'];const FUNCTION_HINTS=['abort','abs','acos','apply','as_const','asin','atan','atan2','calloc','ceil','cerr','cin','clog','cos','cosh','cout','declval','endl','exchange','exit','exp','fabs','floor','fmod','forward','fprintf','fputs','free','frexp','fscanf','future','invoke','isalnum','isalpha','iscntrl','isdigit','isgraph','islower','isprint','ispunct','isspace','isupper','isxdigit','labs','launder','ldexp','log','log10','make_pair','make_shared','make_shared_for_overwrite','make_tuple','make_unique','malloc','memchr','memcmp','memcpy','memset','modf','move','pow','printf','putchar','puts','realloc','scanf','sin','sinh','snprintf','sprintf','sqrt','sscanf','std','stderr','stdin','stdout','strcat','strchr','strcmp','strcpy','strcspn','strlen','strncat','strncmp','strncpy','strpbrk','strrchr','strspn','strstr','swap','tan','tanh','terminate','to_underlying','tolower','toupper','vfprintf','visit','vprintf','vsprintf'];const LITERALS=['NULL','false','nullopt','nullptr','true'];const BUILT_IN=['_Pragma'];const CPP_KEYWORDS={type:RESERVED_TYPES,keyword:RESERVED_KEYWORDS,literal:LITERALS,built_in:BUILT_IN,_type_hints:TYPE_HINTS};const FUNCTION_DISPATCH={className:'function.dispatch',relevance:0,keywords:{_hint:FUNCTION_HINTS},begin:regex.concat(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,hljs.IDENT_RE,regex.lookahead(/(<[^<>]+>|)\s*\(/))};const EXPRESSION_CONTAINS=[FUNCTION_DISPATCH,PREPROCESSOR,CPP_PRIMITIVE_TYPES,C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,NUMBERS,STRINGS];const EXPRESSION_CONTEXT={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:'new throw return else',end:/;/}],keywords:CPP_KEYWORDS,contains:EXPRESSION_CONTAINS.concat([{begin:/\(/,end:/\)/,keywords:CPP_KEYWORDS,contains:EXPRESSION_CONTAINS.concat(['self']),relevance:0}]),relevance:0};const FUNCTION_DECLARATION={className:'function',begin:'('+FUNCTION_TYPE_RE+'[\\*&\\s]+)+'+FUNCTION_TITLE,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:CPP_KEYWORDS,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:DECLTYPE_AUTO_RE,keywords:CPP_KEYWORDS,relevance:0},{begin:FUNCTION_TITLE,returnBegin:!0,contains:[TITLE_MODE],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[STRINGS,NUMBERS]},{relevance:0,match:/,/},{className:'params',begin:/\(/,end:/\)/,keywords:CPP_KEYWORDS,relevance:0,contains:[C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,CPP_PRIMITIVE_TYPES,{begin:/\(/,end:/\)/,keywords:CPP_KEYWORDS,relevance:0,contains:['self',C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,CPP_PRIMITIVE_TYPES]}]},CPP_PRIMITIVE_TYPES,C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,PREPROCESSOR]};return{name:'C++',aliases:['cc','c++','h++','hpp','hh','hxx','cxx'],keywords:CPP_KEYWORDS,illegal:'</',classNameAliases:{'function.dispatch':'built_in'},contains:[].concat(EXPRESSION_CONTEXT,FUNCTION_DECLARATION,FUNCTION_DISPATCH,EXPRESSION_CONTAINS,[PREPROCESSOR,{begin:'\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)',end:'>',keywords:CPP_KEYWORDS,contains:['self',CPP_PRIMITIVE_TYPES]},{begin:hljs.IDENT_RE+'::',keywords:CPP_KEYWORDS},{match:[/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,/\s+/,/\w+/],className:{1:'keyword',3:'title.class'}}])}}
return cpp})();hljs.registerLanguage('cpp',hljsGrammar)})();/*! `csharp` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function csharp(hljs){const BUILT_IN_KEYWORDS=['bool','byte','char','decimal','delegate','double','dynamic','enum','float','int','long','nint','nuint','object','sbyte','short','string','ulong','uint','ushort'];const FUNCTION_MODIFIERS=['public','private','protected','static','internal','protected','abstract','async','extern','override','unsafe','virtual','new','sealed','partial'];const LITERAL_KEYWORDS=['default','false','null','true'];const NORMAL_KEYWORDS=['abstract','as','base','break','case','catch','class','const','continue','do','else','event','explicit','extern','finally','fixed','for','foreach','goto','if','implicit','in','interface','internal','is','lock','namespace','new','operator','out','override','params','private','protected','public','readonly','record','ref','return','scoped','sealed','sizeof','stackalloc','static','struct','switch','this','throw','try','typeof','unchecked','unsafe','using','virtual','void','volatile','while'];const CONTEXTUAL_KEYWORDS=['add','alias','and','ascending','async','await','by','descending','equals','from','get','global','group','init','into','join','let','nameof','not','notnull','on','or','orderby','partial','remove','select','set','unmanaged','value|0','var','when','where','with','yield'];const KEYWORDS={keyword:NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),built_in:BUILT_IN_KEYWORDS,literal:LITERAL_KEYWORDS};const TITLE_MODE=hljs.inherit(hljs.TITLE_MODE,{begin:'[a-zA-Z](\\.?\\w)*'});const NUMBERS={className:'number',variants:[{begin:'\\b(0b[01\']+)'},{begin:'(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)(u|U|l|L|ul|UL|f|F|b|B)'},{begin:'(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'}],relevance:0};const VERBATIM_STRING={className:'string',begin:'@"',end:'"',contains:[{begin:'""'}]};const VERBATIM_STRING_NO_LF=hljs.inherit(VERBATIM_STRING,{illegal:/\n/});const SUBST={className:'subst',begin:/\{/,end:/\}/,keywords:KEYWORDS};const SUBST_NO_LF=hljs.inherit(SUBST,{illegal:/\n/});const INTERPOLATED_STRING={className:'string',begin:/\$"/,end:'"',illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},hljs.BACKSLASH_ESCAPE,SUBST_NO_LF]};const INTERPOLATED_VERBATIM_STRING={className:'string',begin:/\$@"/,end:'"',contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},SUBST]};const INTERPOLATED_VERBATIM_STRING_NO_LF=hljs.inherit(INTERPOLATED_VERBATIM_STRING,{illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},SUBST_NO_LF]});SUBST.contains=[INTERPOLATED_VERBATIM_STRING,INTERPOLATED_STRING,VERBATIM_STRING,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,NUMBERS,hljs.C_BLOCK_COMMENT_MODE];SUBST_NO_LF.contains=[INTERPOLATED_VERBATIM_STRING_NO_LF,INTERPOLATED_STRING,VERBATIM_STRING_NO_LF,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,NUMBERS,hljs.inherit(hljs.C_BLOCK_COMMENT_MODE,{illegal:/\n/})];const STRING={variants:[INTERPOLATED_VERBATIM_STRING,INTERPOLATED_STRING,VERBATIM_STRING,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]};const GENERIC_MODIFIER={begin:"<",end:">",contains:[{beginKeywords:"in out"},TITLE_MODE]};const TYPE_IDENT_RE=hljs.IDENT_RE+'(<'+hljs.IDENT_RE+'(\\s*,\\s*'+hljs.IDENT_RE+')*>)?(\\[\\])?';const AT_IDENTIFIER={begin:"@"+hljs.IDENT_RE,relevance:0};return{name:'C#',aliases:['cs','c#'],keywords:KEYWORDS,illegal:/::/,contains:[hljs.COMMENT('///','$',{returnBegin:!0,contains:[{className:'doctag',variants:[{begin:'///',relevance:0},{begin:'<!--|-->'},{begin:'</?',end:'>'}]}]}),hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,{className:'meta',begin:'#',end:'$',keywords:{keyword:'if else elif endif define undef warning error line region endregion pragma checksum'}},STRING,NUMBERS,{beginKeywords:'class interface',relevance:0,end:/[{;=]/,illegal:/[^\s:,]/,contains:[{beginKeywords:"where class"},TITLE_MODE,GENERIC_MODIFIER,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{beginKeywords:'namespace',relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[TITLE_MODE,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{beginKeywords:'record',relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[TITLE_MODE,GENERIC_MODIFIER,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{className:'meta',begin:'^\\s*\\[(?=[\\w])',excludeBegin:!0,end:'\\]',excludeEnd:!0,contains:[{className:'string',begin:/"/,end:/"/}]},{beginKeywords:'new return throw await else',relevance:0},{className:'function',begin:'('+TYPE_IDENT_RE+'\\s+)+'+hljs.IDENT_RE+'\\s*(<[^=]+>\\s*)?\\(',returnBegin:!0,end:/\s*[{;=]/,excludeEnd:!0,keywords:KEYWORDS,contains:[{beginKeywords:FUNCTION_MODIFIERS.join(" "),relevance:0},{begin:hljs.IDENT_RE+'\\s*(<[^=]+>\\s*)?\\(',returnBegin:!0,contains:[hljs.TITLE_MODE,GENERIC_MODIFIER],relevance:0},{match:/\(\)/},{className:'params',begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS,relevance:0,contains:[STRING,NUMBERS,hljs.C_BLOCK_COMMENT_MODE]},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},AT_IDENTIFIER]}}
return csharp})();hljs.registerLanguage('csharp',hljsGrammar)})();/*! `css` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';const MODES=(hljs)=>{return{IMPORTANT:{scope:'meta',begin:'!important'},BLOCK_COMMENT:hljs.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:'number',begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:'selector-attr',begin:/\[/,end:/\]/,illegal:'$',contains:[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:'number',begin:hljs.NUMBER_RE+'('+'%|em|ex|ch|rem'+'|vw|vh|vmin|vmax'+'|cm|mm|in|pt|pc|px'+'|deg|grad|rad|turn'+'|s|ms'+'|Hz|kHz'+'|dpi|dpcm|dppx'+')?',relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}};const HTML_TAGS=['a','abbr','address','article','aside','audio','b','blockquote','body','button','canvas','caption','cite','code','dd','del','details','dfn','div','dl','dt','em','fieldset','figcaption','figure','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','html','i','iframe','img','input','ins','kbd','label','legend','li','main','mark','menu','nav','object','ol','p','q','quote','samp','section','span','strong','summary','sup','table','tbody','td','textarea','tfoot','th','thead','time','tr','ul','var','video'];const SVG_TAGS=['defs','g','marker','mask','pattern','svg','switch','symbol','feBlend','feColorMatrix','feComponentTransfer','feComposite','feConvolveMatrix','feDiffuseLighting','feDisplacementMap','feFlood','feGaussianBlur','feImage','feMerge','feMorphology','feOffset','feSpecularLighting','feTile','feTurbulence','linearGradient','radialGradient','stop','circle','ellipse','image','line','path','polygon','polyline','rect','text','use','textPath','tspan','foreignObject','clipPath'];const TAGS=[...HTML_TAGS,...SVG_TAGS,];const MEDIA_FEATURES=['any-hover','any-pointer','aspect-ratio','color','color-gamut','color-index','device-aspect-ratio','device-height','device-width','display-mode','forced-colors','grid','height','hover','inverted-colors','monochrome','orientation','overflow-block','overflow-inline','pointer','prefers-color-scheme','prefers-contrast','prefers-reduced-motion','prefers-reduced-transparency','resolution','scan','scripting','update','width','min-width','max-width','min-height','max-height'].sort().reverse();const PSEUDO_CLASSES=['active','any-link','blank','checked','current','default','defined','dir','disabled','drop','empty','enabled','first','first-child','first-of-type','fullscreen','future','focus','focus-visible','focus-within','has','host','host-context','hover','indeterminate','in-range','invalid','is','lang','last-child','last-of-type','left','link','local-link','not','nth-child','nth-col','nth-last-child','nth-last-col','nth-last-of-type','nth-of-type','only-child','only-of-type','optional','out-of-range','past','placeholder-shown','read-only','read-write','required','right','root','scope','target','target-within','user-invalid','valid','visited','where'].sort().reverse();const PSEUDO_ELEMENTS=['after','backdrop','before','cue','cue-region','first-letter','first-line','grammar-error','marker','part','placeholder','selection','slotted','spelling-error'].sort().reverse();const ATTRIBUTES=['align-content','align-items','align-self','alignment-baseline','all','animation','animation-delay','animation-direction','animation-duration','animation-fill-mode','animation-iteration-count','animation-name','animation-play-state','animation-timing-function','backface-visibility','background','background-attachment','background-blend-mode','background-clip','background-color','background-image','background-origin','background-position','background-repeat','background-size','baseline-shift','block-size','border','border-block','border-block-color','border-block-end','border-block-end-color','border-block-end-style','border-block-end-width','border-block-start','border-block-start-color','border-block-start-style','border-block-start-width','border-block-style','border-block-width','border-bottom','border-bottom-color','border-bottom-left-radius','border-bottom-right-radius','border-bottom-style','border-bottom-width','border-collapse','border-color','border-image','border-image-outset','border-image-repeat','border-image-slice','border-image-source','border-image-width','border-inline','border-inline-color','border-inline-end','border-inline-end-color','border-inline-end-style','border-inline-end-width','border-inline-start','border-inline-start-color','border-inline-start-style','border-inline-start-width','border-inline-style','border-inline-width','border-left','border-left-color','border-left-style','border-left-width','border-radius','border-right','border-right-color','border-right-style','border-right-width','border-spacing','border-style','border-top','border-top-color','border-top-left-radius','border-top-right-radius','border-top-style','border-top-width','border-width','bottom','box-decoration-break','box-shadow','box-sizing','break-after','break-before','break-inside','cx','cy','caption-side','caret-color','clear','clip','clip-path','clip-rule','color','color-interpolation','color-interpolation-filters','color-profile','color-rendering','column-count','column-fill','column-gap','column-rule','column-rule-color','column-rule-style','column-rule-width','column-span','column-width','columns','contain','content','content-visibility','counter-increment','counter-reset','cue','cue-after','cue-before','cursor','direction','display','dominant-baseline','empty-cells','enable-background','fill','fill-opacity','fill-rule','filter','flex','flex-basis','flex-direction','flex-flow','flex-grow','flex-shrink','flex-wrap','float','flow','flood-color','flood-opacity','font','font-display','font-family','font-feature-settings','font-kerning','font-language-override','font-size','font-size-adjust','font-smoothing','font-stretch','font-style','font-synthesis','font-variant','font-variant-caps','font-variant-east-asian','font-variant-ligatures','font-variant-numeric','font-variant-position','font-variation-settings','font-weight','gap','glyph-orientation-horizontal','glyph-orientation-vertical','grid','grid-area','grid-auto-columns','grid-auto-flow','grid-auto-rows','grid-column','grid-column-end','grid-column-start','grid-gap','grid-row','grid-row-end','grid-row-start','grid-template','grid-template-areas','grid-template-columns','grid-template-rows','hanging-punctuation','height','hyphens','icon','image-orientation','image-rendering','image-resolution','ime-mode','inline-size','isolation','kerning','justify-content','left','letter-spacing','lighting-color','line-break','line-height','list-style','list-style-image','list-style-position','list-style-type','marker','marker-end','marker-mid','marker-start','mask','margin','margin-block','margin-block-end','margin-block-start','margin-bottom','margin-inline','margin-inline-end','margin-inline-start','margin-left','margin-right','margin-top','marks','mask','mask-border','mask-border-mode','mask-border-outset','mask-border-repeat','mask-border-slice','mask-border-source','mask-border-width','mask-clip','mask-composite','mask-image','mask-mode','mask-origin','mask-position','mask-repeat','mask-size','mask-type','max-block-size','max-height','max-inline-size','max-width','min-block-size','min-height','min-inline-size','min-width','mix-blend-mode','nav-down','nav-index','nav-left','nav-right','nav-up','none','normal','object-fit','object-position','opacity','order','orphans','outline','outline-color','outline-offset','outline-style','outline-width','overflow','overflow-wrap','overflow-x','overflow-y','padding','padding-block','padding-block-end','padding-block-start','padding-bottom','padding-inline','padding-inline-end','padding-inline-start','padding-left','padding-right','padding-top','page-break-after','page-break-before','page-break-inside','pause','pause-after','pause-before','perspective','perspective-origin','pointer-events','position','quotes','r','resize','rest','rest-after','rest-before','right','row-gap','scroll-margin','scroll-margin-block','scroll-margin-block-end','scroll-margin-block-start','scroll-margin-bottom','scroll-margin-inline','scroll-margin-inline-end','scroll-margin-inline-start','scroll-margin-left','scroll-margin-right','scroll-margin-top','scroll-padding','scroll-padding-block','scroll-padding-block-end','scroll-padding-block-start','scroll-padding-bottom','scroll-padding-inline','scroll-padding-inline-end','scroll-padding-inline-start','scroll-padding-left','scroll-padding-right','scroll-padding-top','scroll-snap-align','scroll-snap-stop','scroll-snap-type','scrollbar-color','scrollbar-gutter','scrollbar-width','shape-image-threshold','shape-margin','shape-outside','shape-rendering','stop-color','stop-opacity','stroke','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke-width','speak','speak-as','src','tab-size','table-layout','text-anchor','text-align','text-align-all','text-align-last','text-combine-upright','text-decoration','text-decoration-color','text-decoration-line','text-decoration-style','text-emphasis','text-emphasis-color','text-emphasis-position','text-emphasis-style','text-indent','text-justify','text-orientation','text-overflow','text-rendering','text-shadow','text-transform','text-underline-position','top','transform','transform-box','transform-origin','transform-style','transition','transition-delay','transition-duration','transition-property','transition-timing-function','unicode-bidi','vector-effect','vertical-align','visibility','voice-balance','voice-duration','voice-family','voice-pitch','voice-range','voice-rate','voice-stress','voice-volume','white-space','widows','width','will-change','word-break','word-spacing','word-wrap','writing-mode','x','y','z-index'].sort().reverse();function css(hljs){const regex=hljs.regex;const modes=MODES(hljs);const VENDOR_PREFIX={begin:/-(webkit|moz|ms|o)-(?=[a-z])/};const AT_MODIFIERS="and or not only";const AT_PROPERTY_RE=/@-?\w[\w]*(-\w+)*/;const IDENT_RE='[a-zA-Z-][a-zA-Z0-9_-]*';const STRINGS=[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE];return{name:'CSS',case_insensitive:!0,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[modes.BLOCK_COMMENT,VENDOR_PREFIX,modes.CSS_NUMBER_MODE,{className:'selector-id',begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:'selector-class',begin:'\\.'+IDENT_RE,relevance:0},modes.ATTRIBUTE_SELECTOR_MODE,{className:'selector-pseudo',variants:[{begin:':('+PSEUDO_CLASSES.join('|')+')'},{begin:':(:)?('+PSEUDO_ELEMENTS.join('|')+')'}]},modes.CSS_VARIABLE,{className:'attribute',begin:'\\b('+ATTRIBUTES.join('|')+')\\b'},{begin:/:/,end:/[;}{]/,contains:[modes.BLOCK_COMMENT,modes.HEXCOLOR,modes.IMPORTANT,modes.CSS_NUMBER_MODE,...STRINGS,{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[...STRINGS,{className:"string",begin:/[^)]/,endsWithParent:!0,excludeEnd:!0}]},modes.FUNCTION_DISPATCH]},{begin:regex.lookahead(/@/),end:'[{;]',relevance:0,illegal:/:/,contains:[{className:'keyword',begin:AT_PROPERTY_RE},{begin:/\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:AT_MODIFIERS,attribute:MEDIA_FEATURES.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"},...STRINGS,modes.CSS_NUMBER_MODE]}]},{className:'selector-tag',begin:'\\b('+TAGS.join('|')+')\\b'}]}}
return css})();hljs.registerLanguage('css',hljsGrammar)})();/*! `dos` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function dos(hljs){const COMMENT=hljs.COMMENT(/^\s*@?rem\b/,/$/,{relevance:10});const LABEL={className:'symbol',begin:'^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)',relevance:0};const KEYWORDS=["if","else","goto","for","in","do","call","exit","not","exist","errorlevel","defined","equ","neq","lss","leq","gtr","geq"];const BUILT_INS=["prn","nul","lpt3","lpt2","lpt1","con","com4","com3","com2","com1","aux","shift","cd","dir","echo","setlocal","endlocal","set","pause","copy","append","assoc","at","attrib","break","cacls","cd","chcp","chdir","chkdsk","chkntfs","cls","cmd","color","comp","compact","convert","date","dir","diskcomp","diskcopy","doskey","erase","fs","find","findstr","format","ftype","graftabl","help","keyb","label","md","mkdir","mode","more","move","path","pause","print","popd","pushd","promt","rd","recover","rem","rename","replace","restore","rmdir","shift","sort","start","subst","time","title","tree","type","ver","verify","vol","ping","net","ipconfig","taskkill","xcopy","ren","del"];return{name:'Batch file (DOS)',aliases:['bat','cmd'],case_insensitive:!0,illegal:/\/\*/,keywords:{keyword:KEYWORDS,built_in:BUILT_INS},contains:[{className:'variable',begin:/%%[^ ]|%[^ ]+?%|![^ ]+?!/},{className:'function',begin:LABEL.begin,end:'goto:eof',contains:[hljs.inherit(hljs.TITLE_MODE,{begin:'([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*'}),COMMENT]},{className:'number',begin:'\\b\\d+',relevance:0},COMMENT]}}
return dos})();hljs.registerLanguage('dos',hljsGrammar)})();/*! `go` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function go(hljs){const LITERALS=["true","false","iota","nil"];const BUILT_INS=["append","cap","close","complex","copy","imag","len","make","new","panic","print","println","real","recover","delete"];const TYPES=["bool","byte","complex64","complex128","error","float32","float64","int8","int16","int32","int64","string","uint8","uint16","uint32","uint64","int","uint","uintptr","rune"];const KWS=["break","case","chan","const","continue","default","defer","else","fallthrough","for","func","go","goto","if","import","interface","map","package","range","return","select","struct","switch","type","var",];const KEYWORDS={keyword:KWS,type:TYPES,literal:LITERALS,built_in:BUILT_INS};return{name:'Go',aliases:['golang'],keywords:KEYWORDS,illegal:'</',contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,{className:'string',variants:[hljs.QUOTE_STRING_MODE,hljs.APOS_STRING_MODE,{begin:'`',end:'`'}]},{className:'number',variants:[{begin:hljs.C_NUMBER_RE+'[i]',relevance:1},hljs.C_NUMBER_MODE]},{begin:/:=/},{className:'function',beginKeywords:'func',end:'\\s*(\\{|$)',excludeEnd:!0,contains:[hljs.TITLE_MODE,{className:'params',begin:/\(/,end:/\)/,endsParent:!0,keywords:KEYWORDS,illegal:/["']/}]}]}}
return go})();hljs.registerLanguage('go',hljsGrammar)})();/*! `graphql` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function graphql(hljs){const regex=hljs.regex;const GQL_NAME=/[_A-Za-z][_0-9A-Za-z]*/;return{name:"GraphQL",aliases:["gql"],case_insensitive:!0,disableAutodetect:!1,keywords:{keyword:["query","mutation","subscription","type","input","schema","directive","interface","union","scalar","fragment","enum","on"],literal:["true","false","null"]},contains:[hljs.HASH_COMMENT_MODE,hljs.QUOTE_STRING_MODE,hljs.NUMBER_MODE,{scope:"punctuation",match:/[.]{3}/,relevance:0},{scope:"punctuation",begin:/[\!\(\)\:\=\[\]\{\|\}]{1}/,relevance:0},{scope:"variable",begin:/\$/,end:/\W/,excludeEnd:!0,relevance:0},{scope:"meta",match:/@\w+/,excludeEnd:!0},{scope:"symbol",begin:regex.concat(GQL_NAME,regex.lookahead(/\s*:/)),relevance:0}],illegal:[/[;<']/,/BEGIN/]}}
return graphql})();hljs.registerLanguage('graphql',hljsGrammar)})();/*! `ini` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function ini(hljs){const regex=hljs.regex;const NUMBERS={className:'number',relevance:0,variants:[{begin:/([+-]+)?[\d]+_[\d_]+/},{begin:hljs.NUMBER_RE}]};const COMMENTS=hljs.COMMENT();COMMENTS.variants=[{begin:/;/,end:/$/},{begin:/#/,end:/$/}];const VARIABLES={className:'variable',variants:[{begin:/\$[\w\d"][\w\d_]*/},{begin:/\$\{(.*?)\}/}]};const LITERALS={className:'literal',begin:/\bon|off|true|false|yes|no\b/};const STRINGS={className:"string",contains:[hljs.BACKSLASH_ESCAPE],variants:[{begin:"'''",end:"'''",relevance:10},{begin:'"""',end:'"""',relevance:10},{begin:'"',end:'"'},{begin:"'",end:"'"}]};const ARRAY={begin:/\[/,end:/\]/,contains:[COMMENTS,LITERALS,VARIABLES,STRINGS,NUMBERS,'self'],relevance:0};const BARE_KEY=/[A-Za-z0-9_-]+/;const QUOTED_KEY_DOUBLE_QUOTE=/"(\\"|[^"])*"/;const QUOTED_KEY_SINGLE_QUOTE=/'[^']*'/;const ANY_KEY=regex.either(BARE_KEY,QUOTED_KEY_DOUBLE_QUOTE,QUOTED_KEY_SINGLE_QUOTE);const DOTTED_KEY=regex.concat(ANY_KEY,'(\\s*\\.\\s*',ANY_KEY,')*',regex.lookahead(/\s*=\s*[^#\s]/));return{name:'TOML, also INI',aliases:['toml'],case_insensitive:!0,illegal:/\S/,contains:[COMMENTS,{className:'section',begin:/\[+/,end:/\]+/},{begin:DOTTED_KEY,className:'attr',starts:{end:/$/,contains:[COMMENTS,ARRAY,LITERALS,VARIABLES,STRINGS,NUMBERS]}}]}}
return ini})();hljs.registerLanguage('ini',hljsGrammar)})();/*! `java` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';var decimalDigits='[0-9](_*[0-9])*';var frac=`\\.(${decimalDigits})`;var hexDigits='[0-9a-fA-F](_*[0-9a-fA-F])*';var NUMERIC={className:'number',variants:[{begin:`(\\b(${decimalDigits})((${frac})|\\.)?|(${frac}))`+`[eE][+-]?(${decimalDigits})[fFdD]?\\b`},{begin:`\\b(${decimalDigits})((${frac})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${frac})[fFdD]?\\b`},{begin:`\\b(${decimalDigits})[fFdD]\\b`},{begin:`\\b0[xX]((${hexDigits})\\.?|(${hexDigits})?\\.(${hexDigits}))`+`[pP][+-]?(${decimalDigits})[fFdD]?\\b`},{begin:'\\b(0|[1-9](_*[0-9])*)[lL]?\\b'},{begin:`\\b0[xX](${hexDigits})[lL]?\\b`},{begin:'\\b0(_*[0-7])*[lL]?\\b'},{begin:'\\b0[bB][01](_*[01])*[lL]?\\b'},],relevance:0};function recurRegex(re,substitution,depth){if(depth===-1)return"";return re.replace(substitution,_=>{return recurRegex(re,substitution,depth-1)})}
function java(hljs){const regex=hljs.regex;const JAVA_IDENT_RE='[\u00C0-\u02B8a-zA-Z_$][\u00C0-\u02B8a-zA-Z_$0-9]*';const GENERIC_IDENT_RE=JAVA_IDENT_RE+recurRegex('(?:<'+JAVA_IDENT_RE+'~~~(?:\\s*,\\s*'+JAVA_IDENT_RE+'~~~)*>)?',/~~~/g,2);const MAIN_KEYWORDS=['synchronized','abstract','private','var','static','if','const ','for','while','strictfp','finally','protected','import','native','final','void','enum','else','break','transient','catch','instanceof','volatile','case','assert','package','default','public','try','switch','continue','throws','protected','public','private','module','requires','exports','do','sealed','yield','permits'];const BUILT_INS=['super','this'];const LITERALS=['false','true','null'];const TYPES=['char','boolean','long','float','int','byte','short','double'];const KEYWORDS={keyword:MAIN_KEYWORDS,literal:LITERALS,type:TYPES,built_in:BUILT_INS};const ANNOTATION={className:'meta',begin:'@'+JAVA_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:["self"]}]};const PARAMS={className:'params',begin:/\(/,end:/\)/,keywords:KEYWORDS,relevance:0,contains:[hljs.C_BLOCK_COMMENT_MODE],endsParent:!0};return{name:'Java',aliases:['jsp'],keywords:KEYWORDS,illegal:/<\/|#/,contains:[hljs.COMMENT('/\\*\\*','\\*/',{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:'doctag',begin:'@[A-Za-z]+'}]}),{begin:/import java\.[a-z]+\./,keywords:"import",relevance:2},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,{begin:/"""/,end:/"""/,className:"string",contains:[hljs.BACKSLASH_ESCAPE]},hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,{match:[/\b(?:class|interface|enum|extends|implements|new)/,/\s+/,JAVA_IDENT_RE],className:{1:"keyword",3:"title.class"}},{match:/non-sealed/,scope:"keyword"},{begin:[regex.concat(/(?!else)/,JAVA_IDENT_RE),/\s+/,JAVA_IDENT_RE,/\s+/,/=(?!=)/],className:{1:"type",3:"variable",5:"operator"}},{begin:[/record/,/\s+/,JAVA_IDENT_RE],className:{1:"keyword",3:"title.class"},contains:[PARAMS,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{beginKeywords:'new throw return else',relevance:0},{begin:['(?:'+GENERIC_IDENT_RE+'\\s+)',hljs.UNDERSCORE_IDENT_RE,/\s*(?=\()/],className:{2:"title.function"},keywords:KEYWORDS,contains:[{className:'params',begin:/\(/,end:/\)/,keywords:KEYWORDS,relevance:0,contains:[ANNOTATION,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,NUMERIC,hljs.C_BLOCK_COMMENT_MODE]},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},NUMERIC,ANNOTATION]}}
return java})();hljs.registerLanguage('java',hljsGrammar)})();/*! `javascript` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';const IDENT_RE='[A-Za-z$_][0-9A-Za-z$_]*';const KEYWORDS=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"];const LITERALS=["true","false","null","undefined","NaN","Infinity"];const TYPES=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"];const ERROR_TYPES=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"];const BUILT_IN_GLOBALS=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"];const BUILT_IN_VARIABLES=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"];const BUILT_INS=[].concat(BUILT_IN_GLOBALS,TYPES,ERROR_TYPES);function javascript(hljs){const regex=hljs.regex;const hasClosingTag=(match,{after})=>{const tag="</"+match[0].slice(1);const pos=match.input.indexOf(tag,after);return pos!==-1};const IDENT_RE$1=IDENT_RE;const FRAGMENT={begin:'<>',end:'</>'};const XML_SELF_CLOSING=/<[A-Za-z0-9\\._:-]+\s*\/>/;const XML_TAG={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(match,response)=>{const afterMatchIndex=match[0].length+match.index;const nextChar=match.input[afterMatchIndex];if(nextChar==="<"||nextChar===","){response.ignoreMatch();return}
if(nextChar===">"){if(!hasClosingTag(match,{after:afterMatchIndex})){response.ignoreMatch()}}
let m;const afterMatch=match.input.substring(afterMatchIndex);if((m=afterMatch.match(/^\s*=/))){response.ignoreMatch();return}
if((m=afterMatch.match(/^\s+extends\s+/))){if(m.index===0){response.ignoreMatch();return}}}};const KEYWORDS$1={$pattern:IDENT_RE,keyword:KEYWORDS,literal:LITERALS,built_in:BUILT_INS,"variable.language":BUILT_IN_VARIABLES};const decimalDigits='[0-9](_?[0-9])*';const frac=`\\.(${decimalDigits})`;const decimalInteger=`0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;const NUMBER={className:'number',variants:[{begin:`(\\b(${decimalInteger})((${frac})|\\.)?|(${frac}))`+`[eE][+-]?(${decimalDigits})\\b`},{begin:`\\b(${decimalInteger})\\b((${frac})\\b|\\.)?|(${frac})\\b`},{begin:`\\b(0|[1-9](_?[0-9])*)n\\b`},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"},],relevance:0};const SUBST={className:'subst',begin:'\\$\\{',end:'\\}',keywords:KEYWORDS$1,contains:[]};const HTML_TEMPLATE={begin:'html`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'xml'}};const CSS_TEMPLATE={begin:'css`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'css'}};const GRAPHQL_TEMPLATE={begin:'gql`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'graphql'}};const TEMPLATE_STRING={className:'string',begin:'`',end:'`',contains:[hljs.BACKSLASH_ESCAPE,SUBST]};const JSDOC_COMMENT=hljs.COMMENT(/\/\*\*(?!\/)/,'\\*/',{relevance:0,contains:[{begin:'(?=@[A-Za-z]+)',relevance:0,contains:[{className:'doctag',begin:'@[A-Za-z]+'},{className:'type',begin:'\\{',end:'\\}',excludeEnd:!0,excludeBegin:!0,relevance:0},{className:'variable',begin:IDENT_RE$1+'(?=\\s*(-)|$)',endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]});const COMMENT={className:"comment",variants:[JSDOC_COMMENT,hljs.C_BLOCK_COMMENT_MODE,hljs.C_LINE_COMMENT_MODE]};const SUBST_INTERNALS=[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,GRAPHQL_TEMPLATE,TEMPLATE_STRING,{match:/\$\d+/},NUMBER,];SUBST.contains=SUBST_INTERNALS.concat({begin:/\{/,end:/\}/,keywords:KEYWORDS$1,contains:["self"].concat(SUBST_INTERNALS)});const SUBST_AND_COMMENTS=[].concat(COMMENT,SUBST.contains);const PARAMS_CONTAINS=SUBST_AND_COMMENTS.concat([{begin:/\(/,end:/\)/,keywords:KEYWORDS$1,contains:["self"].concat(SUBST_AND_COMMENTS)}]);const PARAMS={className:'params',begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:PARAMS_CONTAINS};const CLASS_OR_EXTENDS={variants:[{match:[/class/,/\s+/,IDENT_RE$1,/\s+/,/extends/,/\s+/,regex.concat(IDENT_RE$1,"(",regex.concat(/\./,IDENT_RE$1),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,IDENT_RE$1],scope:{1:"keyword",3:"title.class"}},]};const CLASS_REFERENCE={relevance:0,match:regex.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/,),className:"title.class",keywords:{_:[...TYPES,...ERROR_TYPES]}};const USE_STRICT={label:"use_strict",className:'meta',relevance:10,begin:/^\s*['"]use (strict|asm)['"]/};const FUNCTION_DEFINITION={variants:[{match:[/function/,/\s+/,IDENT_RE$1,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[PARAMS],illegal:/%/};const UPPER_CASE_CONSTANT={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};function noneOf(list){return regex.concat("(?!",list.join("|"),")")}
const FUNCTION_CALL={match:regex.concat(/\b/,noneOf([...BUILT_IN_GLOBALS,"super","import"]),IDENT_RE$1,regex.lookahead(/\(/)),className:"title.function",relevance:0};const PROPERTY_ACCESS={begin:regex.concat(/\./,regex.lookahead(regex.concat(IDENT_RE$1,/(?![0-9A-Za-z$_(])/))),end:IDENT_RE$1,excludeBegin:!0,keywords:"prototype",className:"property",relevance:0};const GETTER_OR_SETTER={match:[/get|set/,/\s+/,IDENT_RE$1,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},PARAMS]};const FUNC_LEAD_IN_RE='(\\('+'[^()]*(\\('+'[^()]*(\\('+'[^()]*'+'\\)[^()]*)*'+'\\)[^()]*)*'+'\\)|'+hljs.UNDERSCORE_IDENT_RE+')\\s*=>';const FUNCTION_VARIABLE={match:[/const|var|let/,/\s+/,IDENT_RE$1,/\s*/,/=\s*/,/(async\s*)?/,regex.lookahead(FUNC_LEAD_IN_RE)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[PARAMS]};return{name:'JavaScript',aliases:['js','jsx','mjs','cjs'],keywords:KEYWORDS$1,exports:{PARAMS_CONTAINS,CLASS_REFERENCE},illegal:/#(?![$_A-z])/,contains:[hljs.SHEBANG({label:"shebang",binary:"node",relevance:5}),USE_STRICT,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,GRAPHQL_TEMPLATE,TEMPLATE_STRING,COMMENT,{match:/\$\d+/},NUMBER,CLASS_REFERENCE,{className:'attr',begin:IDENT_RE$1+regex.lookahead(':'),relevance:0},FUNCTION_VARIABLE,{begin:'('+hljs.RE_STARTERS_RE+'|\\b(case|return|throw)\\b)\\s*',keywords:'return throw case',relevance:0,contains:[COMMENT,hljs.REGEXP_MODE,{className:'function',begin:FUNC_LEAD_IN_RE,returnBegin:!0,end:'\\s*=>',contains:[{className:'params',variants:[{begin:hljs.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:PARAMS_CONTAINS}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:FRAGMENT.begin,end:FRAGMENT.end},{match:XML_SELF_CLOSING},{begin:XML_TAG.begin,'on:begin':XML_TAG.isTrulyOpeningTag,end:XML_TAG.end}],subLanguage:'xml',contains:[{begin:XML_TAG.begin,end:XML_TAG.end,skip:!0,contains:['self']}]}],},FUNCTION_DEFINITION,{beginKeywords:"while if switch catch for"},{begin:'\\b(?!function)'+hljs.UNDERSCORE_IDENT_RE+'\\('+'[^()]*(\\('+'[^()]*(\\('+'[^()]*'+'\\)[^()]*)*'+'\\)[^()]*)*'+'\\)\\s*\\{',returnBegin:!0,label:"func.def",contains:[PARAMS,hljs.inherit(hljs.TITLE_MODE,{begin:IDENT_RE$1,className:"title.function"})]},{match:/\.\.\./,relevance:0},PROPERTY_ACCESS,{match:'\\$'+IDENT_RE$1,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[PARAMS]},FUNCTION_CALL,UPPER_CASE_CONSTANT,CLASS_OR_EXTENDS,GETTER_OR_SETTER,{match:/\$[(.]/}]}}
return javascript})();hljs.registerLanguage('javascript',hljsGrammar)})();/*! `json` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function json(hljs){const ATTRIBUTE={className:'attr',begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01};const PUNCTUATION={match:/[{}[\],:]/,className:"punctuation",relevance:0};const LITERALS=["true","false","null"];const LITERALS_MODE={scope:"literal",beginKeywords:LITERALS.join(" "),};return{name:'JSON',keywords:{literal:LITERALS,},contains:[ATTRIBUTE,PUNCTUATION,hljs.QUOTE_STRING_MODE,LITERALS_MODE,hljs.C_NUMBER_MODE,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE],illegal:'\\S'}}
return json})();hljs.registerLanguage('json',hljsGrammar)})();/*! `kotlin` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';var decimalDigits='[0-9](_*[0-9])*';var frac=`\\.(${decimalDigits})`;var hexDigits='[0-9a-fA-F](_*[0-9a-fA-F])*';var NUMERIC={className:'number',variants:[{begin:`(\\b(${decimalDigits})((${frac})|\\.)?|(${frac}))`+`[eE][+-]?(${decimalDigits})[fFdD]?\\b`},{begin:`\\b(${decimalDigits})((${frac})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${frac})[fFdD]?\\b`},{begin:`\\b(${decimalDigits})[fFdD]\\b`},{begin:`\\b0[xX]((${hexDigits})\\.?|(${hexDigits})?\\.(${hexDigits}))`+`[pP][+-]?(${decimalDigits})[fFdD]?\\b`},{begin:'\\b(0|[1-9](_*[0-9])*)[lL]?\\b'},{begin:`\\b0[xX](${hexDigits})[lL]?\\b`},{begin:'\\b0(_*[0-7])*[lL]?\\b'},{begin:'\\b0[bB][01](_*[01])*[lL]?\\b'},],relevance:0};function kotlin(hljs){const KEYWORDS={keyword:'abstract as val var vararg get set class object open private protected public noinline '+'crossinline dynamic final enum if else do while for when throw try catch finally '+'import package is in fun override companion reified inline lateinit init '+'interface annotation data sealed internal infix operator out by constructor super '+'tailrec where const inner suspend typealias external expect actual',built_in:'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',literal:'true false null'};const KEYWORDS_WITH_LABEL={className:'keyword',begin:/\b(break|continue|return|this)\b/,starts:{contains:[{className:'symbol',begin:/@\w+/}]}};const LABEL={className:'symbol',begin:hljs.UNDERSCORE_IDENT_RE+'@'};const SUBST={className:'subst',begin:/\$\{/,end:/\}/,contains:[hljs.C_NUMBER_MODE]};const VARIABLE={className:'variable',begin:'\\$'+hljs.UNDERSCORE_IDENT_RE};const STRING={className:'string',variants:[{begin:'"""',end:'"""(?=[^"])',contains:[VARIABLE,SUBST]},{begin:'\'',end:'\'',illegal:/\n/,contains:[hljs.BACKSLASH_ESCAPE]},{begin:'"',end:'"',illegal:/\n/,contains:[hljs.BACKSLASH_ESCAPE,VARIABLE,SUBST]}]};SUBST.contains.push(STRING);const ANNOTATION_USE_SITE={className:'meta',begin:'@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*'+hljs.UNDERSCORE_IDENT_RE+')?'};const ANNOTATION={className:'meta',begin:'@'+hljs.UNDERSCORE_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:[hljs.inherit(STRING,{className:'string'}),"self"]}]};const KOTLIN_NUMBER_MODE=NUMERIC;const KOTLIN_NESTED_COMMENT=hljs.COMMENT('/\\*','\\*/',{contains:[hljs.C_BLOCK_COMMENT_MODE]});const KOTLIN_PAREN_TYPE={variants:[{className:'type',begin:hljs.UNDERSCORE_IDENT_RE},{begin:/\(/,end:/\)/,contains:[]}]};const KOTLIN_PAREN_TYPE2=KOTLIN_PAREN_TYPE;KOTLIN_PAREN_TYPE2.variants[1].contains=[KOTLIN_PAREN_TYPE];KOTLIN_PAREN_TYPE.variants[1].contains=[KOTLIN_PAREN_TYPE2];return{name:'Kotlin',aliases:['kt','kts'],keywords:KEYWORDS,contains:[hljs.COMMENT('/\\*\\*','\\*/',{relevance:0,contains:[{className:'doctag',begin:'@[A-Za-z]+'}]}),hljs.C_LINE_COMMENT_MODE,KOTLIN_NESTED_COMMENT,KEYWORDS_WITH_LABEL,LABEL,ANNOTATION_USE_SITE,ANNOTATION,{className:'function',beginKeywords:'fun',end:'[(]|$',returnBegin:!0,excludeEnd:!0,keywords:KEYWORDS,relevance:5,contains:[{begin:hljs.UNDERSCORE_IDENT_RE+'\\s*\\(',returnBegin:!0,relevance:0,contains:[hljs.UNDERSCORE_TITLE_MODE]},{className:'type',begin:/</,end:/>/,keywords:'reified',relevance:0},{className:'params',begin:/\(/,end:/\)/,endsParent:!0,keywords:KEYWORDS,relevance:0,contains:[{begin:/:/,end:/[=,\/]/,endsWithParent:!0,contains:[KOTLIN_PAREN_TYPE,hljs.C_LINE_COMMENT_MODE,KOTLIN_NESTED_COMMENT],relevance:0},hljs.C_LINE_COMMENT_MODE,KOTLIN_NESTED_COMMENT,ANNOTATION_USE_SITE,ANNOTATION,STRING,hljs.C_NUMBER_MODE]},KOTLIN_NESTED_COMMENT]},{begin:[/class|interface|trait/,/\s+/,hljs.UNDERSCORE_IDENT_RE],beginScope:{3:"title.class"},keywords:'class interface trait',end:/[:\{(]|$/,excludeEnd:!0,illegal:'extends implements',contains:[{beginKeywords:'public protected internal private constructor'},hljs.UNDERSCORE_TITLE_MODE,{className:'type',begin:/</,end:/>/,excludeBegin:!0,excludeEnd:!0,relevance:0},{className:'type',begin:/[,:]\s*/,end:/[<\(,){\s]|$/,excludeBegin:!0,returnEnd:!0},ANNOTATION_USE_SITE,ANNOTATION]},STRING,{className:'meta',begin:"^#!/usr/bin/env",end:'$',illegal:'\n'},KOTLIN_NUMBER_MODE]}}
return kotlin})();hljs.registerLanguage('kotlin',hljsGrammar)})();/*! `less` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';const MODES=(hljs)=>{return{IMPORTANT:{scope:'meta',begin:'!important'},BLOCK_COMMENT:hljs.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:'number',begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:'selector-attr',begin:/\[/,end:/\]/,illegal:'$',contains:[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:'number',begin:hljs.NUMBER_RE+'('+'%|em|ex|ch|rem'+'|vw|vh|vmin|vmax'+'|cm|mm|in|pt|pc|px'+'|deg|grad|rad|turn'+'|s|ms'+'|Hz|kHz'+'|dpi|dpcm|dppx'+')?',relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}};const HTML_TAGS=['a','abbr','address','article','aside','audio','b','blockquote','body','button','canvas','caption','cite','code','dd','del','details','dfn','div','dl','dt','em','fieldset','figcaption','figure','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','html','i','iframe','img','input','ins','kbd','label','legend','li','main','mark','menu','nav','object','ol','p','q','quote','samp','section','span','strong','summary','sup','table','tbody','td','textarea','tfoot','th','thead','time','tr','ul','var','video'];const SVG_TAGS=['defs','g','marker','mask','pattern','svg','switch','symbol','feBlend','feColorMatrix','feComponentTransfer','feComposite','feConvolveMatrix','feDiffuseLighting','feDisplacementMap','feFlood','feGaussianBlur','feImage','feMerge','feMorphology','feOffset','feSpecularLighting','feTile','feTurbulence','linearGradient','radialGradient','stop','circle','ellipse','image','line','path','polygon','polyline','rect','text','use','textPath','tspan','foreignObject','clipPath'];const TAGS=[...HTML_TAGS,...SVG_TAGS,];const MEDIA_FEATURES=['any-hover','any-pointer','aspect-ratio','color','color-gamut','color-index','device-aspect-ratio','device-height','device-width','display-mode','forced-colors','grid','height','hover','inverted-colors','monochrome','orientation','overflow-block','overflow-inline','pointer','prefers-color-scheme','prefers-contrast','prefers-reduced-motion','prefers-reduced-transparency','resolution','scan','scripting','update','width','min-width','max-width','min-height','max-height'].sort().reverse();const PSEUDO_CLASSES=['active','any-link','blank','checked','current','default','defined','dir','disabled','drop','empty','enabled','first','first-child','first-of-type','fullscreen','future','focus','focus-visible','focus-within','has','host','host-context','hover','indeterminate','in-range','invalid','is','lang','last-child','last-of-type','left','link','local-link','not','nth-child','nth-col','nth-last-child','nth-last-col','nth-last-of-type','nth-of-type','only-child','only-of-type','optional','out-of-range','past','placeholder-shown','read-only','read-write','required','right','root','scope','target','target-within','user-invalid','valid','visited','where'].sort().reverse();const PSEUDO_ELEMENTS=['after','backdrop','before','cue','cue-region','first-letter','first-line','grammar-error','marker','part','placeholder','selection','slotted','spelling-error'].sort().reverse();const ATTRIBUTES=['align-content','align-items','align-self','alignment-baseline','all','animation','animation-delay','animation-direction','animation-duration','animation-fill-mode','animation-iteration-count','animation-name','animation-play-state','animation-timing-function','backface-visibility','background','background-attachment','background-blend-mode','background-clip','background-color','background-image','background-origin','background-position','background-repeat','background-size','baseline-shift','block-size','border','border-block','border-block-color','border-block-end','border-block-end-color','border-block-end-style','border-block-end-width','border-block-start','border-block-start-color','border-block-start-style','border-block-start-width','border-block-style','border-block-width','border-bottom','border-bottom-color','border-bottom-left-radius','border-bottom-right-radius','border-bottom-style','border-bottom-width','border-collapse','border-color','border-image','border-image-outset','border-image-repeat','border-image-slice','border-image-source','border-image-width','border-inline','border-inline-color','border-inline-end','border-inline-end-color','border-inline-end-style','border-inline-end-width','border-inline-start','border-inline-start-color','border-inline-start-style','border-inline-start-width','border-inline-style','border-inline-width','border-left','border-left-color','border-left-style','border-left-width','border-radius','border-right','border-right-color','border-right-style','border-right-width','border-spacing','border-style','border-top','border-top-color','border-top-left-radius','border-top-right-radius','border-top-style','border-top-width','border-width','bottom','box-decoration-break','box-shadow','box-sizing','break-after','break-before','break-inside','cx','cy','caption-side','caret-color','clear','clip','clip-path','clip-rule','color','color-interpolation','color-interpolation-filters','color-profile','color-rendering','column-count','column-fill','column-gap','column-rule','column-rule-color','column-rule-style','column-rule-width','column-span','column-width','columns','contain','content','content-visibility','counter-increment','counter-reset','cue','cue-after','cue-before','cursor','direction','display','dominant-baseline','empty-cells','enable-background','fill','fill-opacity','fill-rule','filter','flex','flex-basis','flex-direction','flex-flow','flex-grow','flex-shrink','flex-wrap','float','flow','flood-color','flood-opacity','font','font-display','font-family','font-feature-settings','font-kerning','font-language-override','font-size','font-size-adjust','font-smoothing','font-stretch','font-style','font-synthesis','font-variant','font-variant-caps','font-variant-east-asian','font-variant-ligatures','font-variant-numeric','font-variant-position','font-variation-settings','font-weight','gap','glyph-orientation-horizontal','glyph-orientation-vertical','grid','grid-area','grid-auto-columns','grid-auto-flow','grid-auto-rows','grid-column','grid-column-end','grid-column-start','grid-gap','grid-row','grid-row-end','grid-row-start','grid-template','grid-template-areas','grid-template-columns','grid-template-rows','hanging-punctuation','height','hyphens','icon','image-orientation','image-rendering','image-resolution','ime-mode','inline-size','isolation','kerning','justify-content','left','letter-spacing','lighting-color','line-break','line-height','list-style','list-style-image','list-style-position','list-style-type','marker','marker-end','marker-mid','marker-start','mask','margin','margin-block','margin-block-end','margin-block-start','margin-bottom','margin-inline','margin-inline-end','margin-inline-start','margin-left','margin-right','margin-top','marks','mask','mask-border','mask-border-mode','mask-border-outset','mask-border-repeat','mask-border-slice','mask-border-source','mask-border-width','mask-clip','mask-composite','mask-image','mask-mode','mask-origin','mask-position','mask-repeat','mask-size','mask-type','max-block-size','max-height','max-inline-size','max-width','min-block-size','min-height','min-inline-size','min-width','mix-blend-mode','nav-down','nav-index','nav-left','nav-right','nav-up','none','normal','object-fit','object-position','opacity','order','orphans','outline','outline-color','outline-offset','outline-style','outline-width','overflow','overflow-wrap','overflow-x','overflow-y','padding','padding-block','padding-block-end','padding-block-start','padding-bottom','padding-inline','padding-inline-end','padding-inline-start','padding-left','padding-right','padding-top','page-break-after','page-break-before','page-break-inside','pause','pause-after','pause-before','perspective','perspective-origin','pointer-events','position','quotes','r','resize','rest','rest-after','rest-before','right','row-gap','scroll-margin','scroll-margin-block','scroll-margin-block-end','scroll-margin-block-start','scroll-margin-bottom','scroll-margin-inline','scroll-margin-inline-end','scroll-margin-inline-start','scroll-margin-left','scroll-margin-right','scroll-margin-top','scroll-padding','scroll-padding-block','scroll-padding-block-end','scroll-padding-block-start','scroll-padding-bottom','scroll-padding-inline','scroll-padding-inline-end','scroll-padding-inline-start','scroll-padding-left','scroll-padding-right','scroll-padding-top','scroll-snap-align','scroll-snap-stop','scroll-snap-type','scrollbar-color','scrollbar-gutter','scrollbar-width','shape-image-threshold','shape-margin','shape-outside','shape-rendering','stop-color','stop-opacity','stroke','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke-width','speak','speak-as','src','tab-size','table-layout','text-anchor','text-align','text-align-all','text-align-last','text-combine-upright','text-decoration','text-decoration-color','text-decoration-line','text-decoration-style','text-emphasis','text-emphasis-color','text-emphasis-position','text-emphasis-style','text-indent','text-justify','text-orientation','text-overflow','text-rendering','text-shadow','text-transform','text-underline-position','top','transform','transform-box','transform-origin','transform-style','transition','transition-delay','transition-duration','transition-property','transition-timing-function','unicode-bidi','vector-effect','vertical-align','visibility','voice-balance','voice-duration','voice-family','voice-pitch','voice-range','voice-rate','voice-stress','voice-volume','white-space','widows','width','will-change','word-break','word-spacing','word-wrap','writing-mode','x','y','z-index'].sort().reverse();const PSEUDO_SELECTORS=PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS).sort().reverse();function less(hljs){const modes=MODES(hljs);const PSEUDO_SELECTORS$1=PSEUDO_SELECTORS;const AT_MODIFIERS="and or not only";const IDENT_RE='[\\w-]+';const INTERP_IDENT_RE='('+IDENT_RE+'|@\\{'+IDENT_RE+'\\})';const RULES=[];const VALUE_MODES=[];const STRING_MODE=function(c){return{className:'string',begin:'~?'+c+'.*?'+c}};const IDENT_MODE=function(name,begin,relevance){return{className:name,begin:begin,relevance:relevance}};const AT_KEYWORDS={$pattern:/[a-z-]+/,keyword:AT_MODIFIERS,attribute:MEDIA_FEATURES.join(" ")};const PARENS_MODE={begin:'\\(',end:'\\)',contains:VALUE_MODES,keywords:AT_KEYWORDS,relevance:0};VALUE_MODES.push(hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRING_MODE("'"),STRING_MODE('"'),modes.CSS_NUMBER_MODE,{begin:'(url|data-uri)\\(',starts:{className:'string',end:'[\\)\\n]',excludeEnd:!0}},modes.HEXCOLOR,PARENS_MODE,IDENT_MODE('variable','@@?'+IDENT_RE,10),IDENT_MODE('variable','@\\{'+IDENT_RE+'\\}'),IDENT_MODE('built_in','~?`[^`]*?`'),{className:'attribute',begin:IDENT_RE+'\\s*:',end:':',returnBegin:!0,excludeEnd:!0},modes.IMPORTANT,{beginKeywords:'and not'},modes.FUNCTION_DISPATCH);const VALUE_WITH_RULESETS=VALUE_MODES.concat({begin:/\{/,end:/\}/,contains:RULES});const MIXIN_GUARD_MODE={beginKeywords:'when',endsWithParent:!0,contains:[{beginKeywords:'and not'}].concat(VALUE_MODES)};const RULE_MODE={begin:INTERP_IDENT_RE+'\\s*:',returnBegin:!0,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/},modes.CSS_VARIABLE,{className:'attribute',begin:'\\b('+ATTRIBUTES.join('|')+')\\b',end:/(?=:)/,starts:{endsWithParent:!0,illegal:'[<=$]',relevance:0,contains:VALUE_MODES}}]};const AT_RULE_MODE={className:'keyword',begin:'@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b',starts:{end:'[;{}]',keywords:AT_KEYWORDS,returnEnd:!0,contains:VALUE_MODES,relevance:0}};const VAR_RULE_MODE={className:'variable',variants:[{begin:'@'+IDENT_RE+'\\s*:',relevance:15},{begin:'@'+IDENT_RE}],starts:{end:'[;}]',returnEnd:!0,contains:VALUE_WITH_RULESETS}};const SELECTOR_MODE={variants:[{begin:'[\\.#:&\\[>]',end:'[;{}]'},{begin:INTERP_IDENT_RE,end:/\{/}],returnBegin:!0,returnEnd:!0,illegal:'[<=\'$"]',relevance:0,contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,MIXIN_GUARD_MODE,IDENT_MODE('keyword','all\\b'),IDENT_MODE('variable','@\\{'+IDENT_RE+'\\}'),{begin:'\\b('+TAGS.join('|')+')\\b',className:'selector-tag'},modes.CSS_NUMBER_MODE,IDENT_MODE('selector-tag',INTERP_IDENT_RE,0),IDENT_MODE('selector-id','#'+INTERP_IDENT_RE),IDENT_MODE('selector-class','\\.'+INTERP_IDENT_RE,0),IDENT_MODE('selector-tag','&',0),modes.ATTRIBUTE_SELECTOR_MODE,{className:'selector-pseudo',begin:':('+PSEUDO_CLASSES.join('|')+')'},{className:'selector-pseudo',begin:':(:)?('+PSEUDO_ELEMENTS.join('|')+')'},{begin:/\(/,end:/\)/,relevance:0,contains:VALUE_WITH_RULESETS},{begin:'!important'},modes.FUNCTION_DISPATCH]};const PSEUDO_SELECTOR_MODE={begin:IDENT_RE+':(:)?'+`(${PSEUDO_SELECTORS$1.join('|')})`,returnBegin:!0,contains:[SELECTOR_MODE]};RULES.push(hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,AT_RULE_MODE,VAR_RULE_MODE,PSEUDO_SELECTOR_MODE,RULE_MODE,SELECTOR_MODE,MIXIN_GUARD_MODE,modes.FUNCTION_DISPATCH);return{name:'Less',case_insensitive:!0,illegal:'[=>\'/<($"]',contains:RULES}}
return less})();hljs.registerLanguage('less',hljsGrammar)})();/*! `lua` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function lua(hljs){const OPENING_LONG_BRACKET='\\[=*\\[';const CLOSING_LONG_BRACKET='\\]=*\\]';const LONG_BRACKETS={begin:OPENING_LONG_BRACKET,end:CLOSING_LONG_BRACKET,contains:['self']};const COMMENTS=[hljs.COMMENT('--(?!'+OPENING_LONG_BRACKET+')','$'),hljs.COMMENT('--'+OPENING_LONG_BRACKET,CLOSING_LONG_BRACKET,{contains:[LONG_BRACKETS],relevance:10})];return{name:'Lua',keywords:{$pattern:hljs.UNDERSCORE_IDENT_RE,literal:"true false nil",keyword:"and break do else elseif end for goto if in local not or repeat return then until while",built_in:'_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len '+'__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert '+'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring '+'module next pairs pcall print rawequal rawget rawset require select setfenv '+'setmetatable tonumber tostring type unpack xpcall arg self '+'coroutine resume yield status wrap create running debug getupvalue '+'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv '+'io lines write close flush open output type read stderr stdin input stdout popen tmpfile '+'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan '+'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall '+'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower '+'table setn insert getn foreachi maxn foreach concat sort remove'},contains:COMMENTS.concat([{className:'function',beginKeywords:'function',end:'\\)',contains:[hljs.inherit(hljs.TITLE_MODE,{begin:'([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*'}),{className:'params',begin:'\\(',endsWithParent:!0,contains:COMMENTS}].concat(COMMENTS)},hljs.C_NUMBER_MODE,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,{className:'string',begin:OPENING_LONG_BRACKET,end:CLOSING_LONG_BRACKET,contains:[LONG_BRACKETS],relevance:5}])}}
return lua})();hljs.registerLanguage('lua',hljsGrammar)})();/*! `markdown` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function markdown(hljs){const regex=hljs.regex;const INLINE_HTML={begin:/<\/?[A-Za-z_]/,end:'>',subLanguage:'xml',relevance:0};const HORIZONTAL_RULE={begin:'^[-\\*]{3,}',end:'$'};const CODE={className:'code',variants:[{begin:'(`{3,})[^`](.|\\n)*?\\1`*[ ]*'},{begin:'(~{3,})[^~](.|\\n)*?\\1~*[ ]*'},{begin:'```',end:'```+[ ]*$'},{begin:'~~~',end:'~~~+[ ]*$'},{begin:'`.+?`'},{begin:'(?=^( {4}|\\t))',contains:[{begin:'^( {4}|\\t)',end:'(\\n)$'}],relevance:0}]};const LIST={className:'bullet',begin:'^[ \t]*([*+-]|(\\d+\\.))(?=\\s+)',end:'\\s+',excludeEnd:!0};const LINK_REFERENCE={begin:/^\[[^\n]+\]:/,returnBegin:!0,contains:[{className:'symbol',begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0},{className:'link',begin:/:\s*/,end:/$/,excludeBegin:!0}]};const URL_SCHEME=/[A-Za-z][A-Za-z0-9+.-]*/;const LINK={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:regex.concat(/\[.+?\]\(/,URL_SCHEME,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.*?\]\(.*?\)/,relevance:0}],returnBegin:!0,contains:[{match:/\[(?=\])/},{className:'string',relevance:0,begin:'\\[',end:'\\]',excludeBegin:!0,returnEnd:!0},{className:'link',relevance:0,begin:'\\]\\(',end:'\\)',excludeBegin:!0,excludeEnd:!0},{className:'symbol',relevance:0,begin:'\\]\\[',end:'\\]',excludeBegin:!0,excludeEnd:!0}]};const BOLD={className:'strong',contains:[],variants:[{begin:/_{2}(?!\s)/,end:/_{2}/},{begin:/\*{2}(?!\s)/,end:/\*{2}/}]};const ITALIC={className:'emphasis',contains:[],variants:[{begin:/\*(?![*\s])/,end:/\*/},{begin:/_(?![_\s])/,end:/_/,relevance:0}]};const BOLD_WITHOUT_ITALIC=hljs.inherit(BOLD,{contains:[]});const ITALIC_WITHOUT_BOLD=hljs.inherit(ITALIC,{contains:[]});BOLD.contains.push(ITALIC_WITHOUT_BOLD);ITALIC.contains.push(BOLD_WITHOUT_ITALIC);let CONTAINABLE=[INLINE_HTML,LINK];[BOLD,ITALIC,BOLD_WITHOUT_ITALIC,ITALIC_WITHOUT_BOLD].forEach(m=>{m.contains=m.contains.concat(CONTAINABLE)});CONTAINABLE=CONTAINABLE.concat(BOLD,ITALIC);const HEADER={className:'section',variants:[{begin:'^#{1,6}',end:'$',contains:CONTAINABLE},{begin:'(?=^.+?\\n[=-]{2,}$)',contains:[{begin:'^[=-]*$'},{begin:'^',end:"\\n",contains:CONTAINABLE}]}]};const BLOCKQUOTE={className:'quote',begin:'^>\\s+',contains:CONTAINABLE,end:'$'};return{name:'Markdown',aliases:['md','mkdown','mkd'],contains:[HEADER,INLINE_HTML,LIST,BOLD,ITALIC,BLOCKQUOTE,CODE,HORIZONTAL_RULE,LINK,LINK_REFERENCE]}}
return markdown})();hljs.registerLanguage('markdown',hljsGrammar)})();/*! `objectivec` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function objectivec(hljs){const API_CLASS={className:'built_in',begin:'\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+'};const IDENTIFIER_RE=/[a-zA-Z@][a-zA-Z0-9_]*/;const TYPES=["int","float","char","unsigned","signed","short","long","double","wchar_t","unichar","void","bool","BOOL","id|0","_Bool"];const KWS=["while","export","sizeof","typedef","const","struct","for","union","volatile","static","mutable","if","do","return","goto","enum","else","break","extern","asm","case","default","register","explicit","typename","switch","continue","inline","readonly","assign","readwrite","self","@synchronized","id","typeof","nonatomic","IBOutlet","IBAction","strong","weak","copy","in","out","inout","bycopy","byref","oneway","__strong","__weak","__block","__autoreleasing","@private","@protected","@public","@try","@property","@end","@throw","@catch","@finally","@autoreleasepool","@synthesize","@dynamic","@selector","@optional","@required","@encode","@package","@import","@defs","@compatibility_alias","__bridge","__bridge_transfer","__bridge_retained","__bridge_retain","__covariant","__contravariant","__kindof","_Nonnull","_Nullable","_Null_unspecified","__FUNCTION__","__PRETTY_FUNCTION__","__attribute__","getter","setter","retain","unsafe_unretained","nonnull","nullable","null_unspecified","null_resettable","class","instancetype","NS_DESIGNATED_INITIALIZER","NS_UNAVAILABLE","NS_REQUIRES_SUPER","NS_RETURNS_INNER_POINTER","NS_INLINE","NS_AVAILABLE","NS_DEPRECATED","NS_ENUM","NS_OPTIONS","NS_SWIFT_UNAVAILABLE","NS_ASSUME_NONNULL_BEGIN","NS_ASSUME_NONNULL_END","NS_REFINED_FOR_SWIFT","NS_SWIFT_NAME","NS_SWIFT_NOTHROW","NS_DURING","NS_HANDLER","NS_ENDHANDLER","NS_VALUERETURN","NS_VOIDRETURN"];const LITERALS=["false","true","FALSE","TRUE","nil","YES","NO","NULL"];const BUILT_INS=["dispatch_once_t","dispatch_queue_t","dispatch_sync","dispatch_async","dispatch_once"];const KEYWORDS={"variable.language":["this","super"],$pattern:IDENTIFIER_RE,keyword:KWS,literal:LITERALS,built_in:BUILT_INS,type:TYPES};const CLASS_KEYWORDS={$pattern:IDENTIFIER_RE,keyword:["@interface","@class","@protocol","@implementation"]};return{name:'Objective-C',aliases:['mm','objc','obj-c','obj-c++','objective-c++'],keywords:KEYWORDS,illegal:'</',contains:[API_CLASS,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,hljs.C_NUMBER_MODE,hljs.QUOTE_STRING_MODE,hljs.APOS_STRING_MODE,{className:'string',variants:[{begin:'@"',end:'"',illegal:'\\n',contains:[hljs.BACKSLASH_ESCAPE]}]},{className:'meta',begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:'if else elif endif define undef warning error line '+'pragma ifdef ifndef include'},contains:[{begin:/\\\n/,relevance:0},hljs.inherit(hljs.QUOTE_STRING_MODE,{className:'string'}),{className:'string',begin:/<.*?>/,end:/$/,illegal:'\\n'},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]},{className:'class',begin:'('+CLASS_KEYWORDS.keyword.join('|')+')\\b',end:/(\{|$)/,excludeEnd:!0,keywords:CLASS_KEYWORDS,contains:[hljs.UNDERSCORE_TITLE_MODE]},{begin:'\\.'+hljs.UNDERSCORE_IDENT_RE,relevance:0}]}}
return objectivec})();hljs.registerLanguage('objectivec',hljsGrammar)})();/*! `perl` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function perl(hljs){const regex=hljs.regex;const KEYWORDS=['abs','accept','alarm','and','atan2','bind','binmode','bless','break','caller','chdir','chmod','chomp','chop','chown','chr','chroot','class','close','closedir','connect','continue','cos','crypt','dbmclose','dbmopen','defined','delete','die','do','dump','each','else','elsif','endgrent','endhostent','endnetent','endprotoent','endpwent','endservent','eof','eval','exec','exists','exit','exp','fcntl','field','fileno','flock','for','foreach','fork','format','formline','getc','getgrent','getgrgid','getgrnam','gethostbyaddr','gethostbyname','gethostent','getlogin','getnetbyaddr','getnetbyname','getnetent','getpeername','getpgrp','getpriority','getprotobyname','getprotobynumber','getprotoent','getpwent','getpwnam','getpwuid','getservbyname','getservbyport','getservent','getsockname','getsockopt','given','glob','gmtime','goto','grep','gt','hex','if','index','int','ioctl','join','keys','kill','last','lc','lcfirst','length','link','listen','local','localtime','log','lstat','lt','ma','map','method','mkdir','msgctl','msgget','msgrcv','msgsnd','my','ne','next','no','not','oct','open','opendir','or','ord','our','pack','package','pipe','pop','pos','print','printf','prototype','push','q|0','qq','quotemeta','qw','qx','rand','read','readdir','readline','readlink','readpipe','recv','redo','ref','rename','require','reset','return','reverse','rewinddir','rindex','rmdir','say','scalar','seek','seekdir','select','semctl','semget','semop','send','setgrent','sethostent','setnetent','setpgrp','setpriority','setprotoent','setpwent','setservent','setsockopt','shift','shmctl','shmget','shmread','shmwrite','shutdown','sin','sleep','socket','socketpair','sort','splice','split','sprintf','sqrt','srand','stat','state','study','sub','substr','symlink','syscall','sysopen','sysread','sysseek','system','syswrite','tell','telldir','tie','tied','time','times','tr','truncate','uc','ucfirst','umask','undef','unless','unlink','unpack','unshift','untie','until','use','utime','values','vec','wait','waitpid','wantarray','warn','when','while','write','x|0','xor','y|0'];const REGEX_MODIFIERS=/[dualxmsipngr]{0,12}/;const PERL_KEYWORDS={$pattern:/[\w.]+/,keyword:KEYWORDS.join(" ")};const SUBST={className:'subst',begin:'[$@]\\{',end:'\\}',keywords:PERL_KEYWORDS};const METHOD={begin:/->\{/,end:/\}/};const ATTR={scope:'attr',match:/\s+:\s*\w+(\s*\(.*?\))?/,};const VAR={scope:'variable',variants:[{begin:/\$\d/},{begin:regex.concat(/[$%@](\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/,`(?![A-Za-z])(?![@$%])`)},{begin:/[$%@][^\s\w{=]|\$=/,relevance:0}],contains:[ATTR],};const NUMBER={className:'number',variants:[{match:/0?\.[0-9][0-9_]+\b/},{match:/\bv?(0|[1-9][0-9_]*(\.[0-9_]+)?|[1-9][0-9_]*)\b/},{match:/\b0[0-7][0-7_]*\b/},{match:/\b0x[0-9a-fA-F][0-9a-fA-F_]*\b/},{match:/\b0b[0-1][0-1_]*\b/},],relevance:0};const STRING_CONTAINS=[hljs.BACKSLASH_ESCAPE,SUBST,VAR];const REGEX_DELIMS=[/!/,/\//,/\|/,/\?/,/'/,/"/,/#/];const PAIRED_DOUBLE_RE=(prefix,open,close='\\1')=>{const middle=(close==='\\1')?close:regex.concat(close,open);return regex.concat(regex.concat("(?:",prefix,")"),open,/(?:\\.|[^\\\/])*?/,middle,/(?:\\.|[^\\\/])*?/,close,REGEX_MODIFIERS)};const PAIRED_RE=(prefix,open,close)=>{return regex.concat(regex.concat("(?:",prefix,")"),open,/(?:\\.|[^\\\/])*?/,close,REGEX_MODIFIERS)};const PERL_DEFAULT_CONTAINS=[VAR,hljs.HASH_COMMENT_MODE,hljs.COMMENT(/^=\w/,/=cut/,{endsWithParent:!0}),METHOD,{className:'string',contains:STRING_CONTAINS,variants:[{begin:'q[qwxr]?\\s*\\(',end:'\\)',relevance:5},{begin:'q[qwxr]?\\s*\\[',end:'\\]',relevance:5},{begin:'q[qwxr]?\\s*\\{',end:'\\}',relevance:5},{begin:'q[qwxr]?\\s*\\|',end:'\\|',relevance:5},{begin:'q[qwxr]?\\s*<',end:'>',relevance:5},{begin:'qw\\s+q',end:'q',relevance:5},{begin:'\'',end:'\'',contains:[hljs.BACKSLASH_ESCAPE]},{begin:'"',end:'"'},{begin:'`',end:'`',contains:[hljs.BACKSLASH_ESCAPE]},{begin:/\{\w+\}/,relevance:0},{begin:'-?\\w+\\s*=>',relevance:0}]},NUMBER,{begin:'(\\/\\/|'+hljs.RE_STARTERS_RE+'|\\b(split|return|print|reverse|grep)\\b)\\s*',keywords:'split return print reverse grep',relevance:0,contains:[hljs.HASH_COMMENT_MODE,{className:'regexp',variants:[{begin:PAIRED_DOUBLE_RE("s|tr|y",regex.either(...REGEX_DELIMS,{capture:!0}))},{begin:PAIRED_DOUBLE_RE("s|tr|y","\\(","\\)")},{begin:PAIRED_DOUBLE_RE("s|tr|y","\\[","\\]")},{begin:PAIRED_DOUBLE_RE("s|tr|y","\\{","\\}")}],relevance:2},{className:'regexp',variants:[{begin:/(m|qr)\/\//,relevance:0},{begin:PAIRED_RE("(?:m|qr)?",/\//,/\//)},{begin:PAIRED_RE("m|qr",regex.either(...REGEX_DELIMS,{capture:!0}),/\1/)},{begin:PAIRED_RE("m|qr",/\(/,/\)/)},{begin:PAIRED_RE("m|qr",/\[/,/\]/)},{begin:PAIRED_RE("m|qr",/\{/,/\}/)}]}]},{className:'function',beginKeywords:'sub method',end:'(\\s*\\(.*?\\))?[;{]',excludeEnd:!0,relevance:5,contains:[hljs.TITLE_MODE,ATTR]},{className:'class',beginKeywords:'class',end:'[;{]',excludeEnd:!0,relevance:5,contains:[hljs.TITLE_MODE,ATTR,NUMBER]},{begin:'-\\w\\b',relevance:0},{begin:"^__DATA__$",end:"^__END__$",subLanguage:'mojolicious',contains:[{begin:"^@@.*",end:"$",className:"comment"}]}];SUBST.contains=PERL_DEFAULT_CONTAINS;METHOD.contains=PERL_DEFAULT_CONTAINS;return{name:'Perl',aliases:['pl','pm'],keywords:PERL_KEYWORDS,contains:PERL_DEFAULT_CONTAINS}}
return perl})();hljs.registerLanguage('perl',hljsGrammar)})();/*! `php` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function php(hljs){const regex=hljs.regex;const NOT_PERL_ETC=/(?![A-Za-z0-9])(?![$])/;const IDENT_RE=regex.concat(/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/,NOT_PERL_ETC);const PASCAL_CASE_CLASS_NAME_RE=regex.concat(/(\\?[A-Z][a-z0-9_\x7f-\xff]+|\\?[A-Z]+(?=[A-Z][a-z0-9_\x7f-\xff])){1,}/,NOT_PERL_ETC);const VARIABLE={scope:'variable',match:'\\$+'+IDENT_RE,};const PREPROCESSOR={scope:'meta',variants:[{begin:/<\?php/,relevance:10},{begin:/<\?=/},{begin:/<\?/,relevance:0.1},{begin:/\?>/}]};const SUBST={scope:'subst',variants:[{begin:/\$\w+/},{begin:/\{\$/,end:/\}/}]};const SINGLE_QUOTED=hljs.inherit(hljs.APOS_STRING_MODE,{illegal:null,});const DOUBLE_QUOTED=hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal:null,contains:hljs.QUOTE_STRING_MODE.contains.concat(SUBST),});const HEREDOC={begin:/<<<[ \t]*(?:(\w+)|"(\w+)")\n/,end:/[ \t]*(\w+)\b/,contains:hljs.QUOTE_STRING_MODE.contains.concat(SUBST),'on:begin':(m,resp)=>{resp.data._beginMatch=m[1]||m[2]},'on:end':(m,resp)=>{if(resp.data._beginMatch!==m[1])resp.ignoreMatch();},};const NOWDOC=hljs.END_SAME_AS_BEGIN({begin:/<<<[ \t]*'(\w+)'\n/,end:/[ \t]*(\w+)\b/,});const WHITESPACE='[ \t\n]';const STRING={scope:'string',variants:[DOUBLE_QUOTED,SINGLE_QUOTED,HEREDOC,NOWDOC]};const NUMBER={scope:'number',variants:[{begin:`\\b0[bB][01]+(?:_[01]+)*\\b`},{begin:`\\b0[oO][0-7]+(?:_[0-7]+)*\\b`},{begin:`\\b0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*\\b`},{begin:`(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?`}],relevance:0};const LITERALS=["false","null","true"];const KWS=["__CLASS__","__DIR__","__FILE__","__FUNCTION__","__COMPILER_HALT_OFFSET__","__LINE__","__METHOD__","__NAMESPACE__","__TRAIT__","die","echo","exit","include","include_once","print","require","require_once","array","abstract","and","as","binary","bool","boolean","break","callable","case","catch","class","clone","const","continue","declare","default","do","double","else","elseif","empty","enddeclare","endfor","endforeach","endif","endswitch","endwhile","enum","eval","extends","final","finally","float","for","foreach","from","global","goto","if","implements","instanceof","insteadof","int","integer","interface","isset","iterable","list","match|0","mixed","new","never","object","or","private","protected","public","readonly","real","return","string","switch","throw","trait","try","unset","use","var","void","while","xor","yield"];const BUILT_INS=["Error|0","AppendIterator","ArgumentCountError","ArithmeticError","ArrayIterator","ArrayObject","AssertionError","BadFunctionCallException","BadMethodCallException","CachingIterator","CallbackFilterIterator","CompileError","Countable","DirectoryIterator","DivisionByZeroError","DomainException","EmptyIterator","ErrorException","Exception","FilesystemIterator","FilterIterator","GlobIterator","InfiniteIterator","InvalidArgumentException","IteratorIterator","LengthException","LimitIterator","LogicException","MultipleIterator","NoRewindIterator","OutOfBoundsException","OutOfRangeException","OuterIterator","OverflowException","ParentIterator","ParseError","RangeException","RecursiveArrayIterator","RecursiveCachingIterator","RecursiveCallbackFilterIterator","RecursiveDirectoryIterator","RecursiveFilterIterator","RecursiveIterator","RecursiveIteratorIterator","RecursiveRegexIterator","RecursiveTreeIterator","RegexIterator","RuntimeException","SeekableIterator","SplDoublyLinkedList","SplFileInfo","SplFileObject","SplFixedArray","SplHeap","SplMaxHeap","SplMinHeap","SplObjectStorage","SplObserver","SplPriorityQueue","SplQueue","SplStack","SplSubject","SplTempFileObject","TypeError","UnderflowException","UnexpectedValueException","UnhandledMatchError","ArrayAccess","BackedEnum","Closure","Fiber","Generator","Iterator","IteratorAggregate","Serializable","Stringable","Throwable","Traversable","UnitEnum","WeakReference","WeakMap","Directory","__PHP_Incomplete_Class","parent","php_user_filter","self","static","stdClass"];const dualCase=(items)=>{const result=[];items.forEach(item=>{result.push(item);if(item.toLowerCase()===item){result.push(item.toUpperCase())}else{result.push(item.toLowerCase())}});return result};const KEYWORDS={keyword:KWS,literal:dualCase(LITERALS),built_in:BUILT_INS,};const normalizeKeywords=(items)=>{return items.map(item=>{return item.replace(/\|\d+$/,"")})};const CONSTRUCTOR_CALL={variants:[{match:[/new/,regex.concat(WHITESPACE,"+"),regex.concat("(?!",normalizeKeywords(BUILT_INS).join("\\b|"),"\\b)"),PASCAL_CASE_CLASS_NAME_RE,],scope:{1:"keyword",4:"title.class",},}]};const CONSTANT_REFERENCE=regex.concat(IDENT_RE,"\\b(?!\\()");const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON={variants:[{match:[regex.concat(/::/,regex.lookahead(/(?!class\b)/)),CONSTANT_REFERENCE,],scope:{2:"variable.constant",},},{match:[/::/,/class/,],scope:{2:"variable.language",},},{match:[PASCAL_CASE_CLASS_NAME_RE,regex.concat(/::/,regex.lookahead(/(?!class\b)/)),CONSTANT_REFERENCE,],scope:{1:"title.class",3:"variable.constant",},},{match:[PASCAL_CASE_CLASS_NAME_RE,regex.concat("::",regex.lookahead(/(?!class\b)/)),],scope:{1:"title.class",},},{match:[PASCAL_CASE_CLASS_NAME_RE,/::/,/class/,],scope:{1:"title.class",3:"variable.language",},}]};const NAMED_ARGUMENT={scope:'attr',match:regex.concat(IDENT_RE,regex.lookahead(':'),regex.lookahead(/(?!::)/)),};const PARAMS_MODE={relevance:0,begin:/\(/,end:/\)/,keywords:KEYWORDS,contains:[NAMED_ARGUMENT,VARIABLE,LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,hljs.C_BLOCK_COMMENT_MODE,STRING,NUMBER,CONSTRUCTOR_CALL,],};const FUNCTION_INVOKE={relevance:0,match:[/\b/,regex.concat("(?!fn\\b|function\\b|",normalizeKeywords(KWS).join("\\b|"),"|",normalizeKeywords(BUILT_INS).join("\\b|"),"\\b)"),IDENT_RE,regex.concat(WHITESPACE,"*"),regex.lookahead(/(?=\()/)],scope:{3:"title.function.invoke",},contains:[PARAMS_MODE]};PARAMS_MODE.contains.push(FUNCTION_INVOKE);const ATTRIBUTE_CONTAINS=[NAMED_ARGUMENT,LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,hljs.C_BLOCK_COMMENT_MODE,STRING,NUMBER,CONSTRUCTOR_CALL,];const ATTRIBUTES={begin:regex.concat(/#\[\s*/,PASCAL_CASE_CLASS_NAME_RE),beginScope:"meta",end:/]/,endScope:"meta",keywords:{literal:LITERALS,keyword:['new','array',]},contains:[{begin:/\[/,end:/]/,keywords:{literal:LITERALS,keyword:['new','array',]},contains:['self',...ATTRIBUTE_CONTAINS,]},...ATTRIBUTE_CONTAINS,{scope:'meta',match:PASCAL_CASE_CLASS_NAME_RE}]};return{case_insensitive:!1,keywords:KEYWORDS,contains:[ATTRIBUTES,hljs.HASH_COMMENT_MODE,hljs.COMMENT('//','$'),hljs.COMMENT('/\\*','\\*/',{contains:[{scope:'doctag',match:'@[A-Za-z]+'}]}),{match:/__halt_compiler\(\);/,keywords:'__halt_compiler',starts:{scope:"comment",end:hljs.MATCH_NOTHING_RE,contains:[{match:/\?>/,scope:"meta",endsParent:!0}]}},PREPROCESSOR,{scope:'variable.language',match:/\$this\b/},VARIABLE,FUNCTION_INVOKE,LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,{match:[/const/,/\s/,IDENT_RE,],scope:{1:"keyword",3:"variable.constant",},},CONSTRUCTOR_CALL,{scope:'function',relevance:0,beginKeywords:'fn function',end:/[;{]/,excludeEnd:!0,illegal:'[$%\\[]',contains:[{beginKeywords:'use',},hljs.UNDERSCORE_TITLE_MODE,{begin:'=>',endsParent:!0},{scope:'params',begin:'\\(',end:'\\)',excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS,contains:['self',VARIABLE,LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,hljs.C_BLOCK_COMMENT_MODE,STRING,NUMBER]},]},{scope:'class',variants:[{beginKeywords:"enum",illegal:/[($"]/},{beginKeywords:"class interface trait",illegal:/[:($"]/}],relevance:0,end:/\{/,excludeEnd:!0,contains:[{beginKeywords:'extends implements'},hljs.UNDERSCORE_TITLE_MODE]},{beginKeywords:'namespace',relevance:0,end:';',illegal:/[.']/,contains:[hljs.inherit(hljs.UNDERSCORE_TITLE_MODE,{scope:"title.class"})]},{beginKeywords:'use',relevance:0,end:';',contains:[{match:/\b(as|const|function)\b/,scope:"keyword"},hljs.UNDERSCORE_TITLE_MODE]},STRING,NUMBER,]}}
return php})();hljs.registerLanguage('php',hljsGrammar)})();/*! `php-template` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function phpTemplate(hljs){return{name:"PHP template",subLanguage:'xml',contains:[{begin:/<\?(php|=)?/,end:/\?>/,subLanguage:'php',contains:[{begin:'/\\*',end:'\\*/',skip:!0},{begin:'b"',end:'"',skip:!0},{begin:'b\'',end:'\'',skip:!0},hljs.inherit(hljs.APOS_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0}),hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0})]}]}}
return phpTemplate})();hljs.registerLanguage('php-template',hljsGrammar)})();/*! `python` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function python(hljs){const regex=hljs.regex;const IDENT_RE=/[\p{XID_Start}_]\p{XID_Continue}*/u;const RESERVED_WORDS=['and','as','assert','async','await','break','case','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','in','is','lambda','match','nonlocal|10','not','or','pass','raise','return','try','while','with','yield'];const BUILT_INS=['__import__','abs','all','any','ascii','bin','bool','breakpoint','bytearray','bytes','callable','chr','classmethod','compile','complex','delattr','dict','dir','divmod','enumerate','eval','exec','filter','float','format','frozenset','getattr','globals','hasattr','hash','help','hex','id','input','int','isinstance','issubclass','iter','len','list','locals','map','max','memoryview','min','next','object','oct','open','ord','pow','print','property','range','repr','reversed','round','set','setattr','slice','sorted','staticmethod','str','sum','super','tuple','type','vars','zip'];const LITERALS=['__debug__','Ellipsis','False','None','NotImplemented','True'];const TYPES=["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"];const KEYWORDS={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:RESERVED_WORDS,built_in:BUILT_INS,literal:LITERALS,type:TYPES};const PROMPT={className:'meta',begin:/^(>>>|\.\.\.) /};const SUBST={className:'subst',begin:/\{/,end:/\}/,keywords:KEYWORDS,illegal:/#/};const LITERAL_BRACKET={begin:/\{\{/,relevance:0};const STRING={className:'string',contains:[hljs.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[hljs.BACKSLASH_ESCAPE,PROMPT],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[hljs.BACKSLASH_ESCAPE,PROMPT],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[hljs.BACKSLASH_ESCAPE,PROMPT,LITERAL_BRACKET,SUBST]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[hljs.BACKSLASH_ESCAPE,PROMPT,LITERAL_BRACKET,SUBST]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[hljs.BACKSLASH_ESCAPE,LITERAL_BRACKET,SUBST]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[hljs.BACKSLASH_ESCAPE,LITERAL_BRACKET,SUBST]},hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]};const digitpart='[0-9](_?[0-9])*';const pointfloat=`(\\b(${digitpart}))?\\.(${digitpart})|\\b(${digitpart})\\.`;const lookahead=`\\b|${RESERVED_WORDS.join('|')}`;const NUMBER={className:'number',relevance:0,variants:[{begin:`(\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`},{begin:`(${pointfloat})[jJ]?`},{begin:`\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`},{begin:`\\b0[bB](_?[01])+[lL]?(?=${lookahead})`},{begin:`\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`},{begin:`\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`},{begin:`\\b(${digitpart})[jJ](?=${lookahead})`}]};const COMMENT_TYPE={className:"comment",begin:regex.lookahead(/# type:/),end:/$/,keywords:KEYWORDS,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]};const PARAMS={className:'params',variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS,contains:['self',PROMPT,NUMBER,STRING,hljs.HASH_COMMENT_MODE]}]};SUBST.contains=[STRING,NUMBER,PROMPT];return{name:'Python',aliases:['py','gyp','ipython'],unicodeRegex:!0,keywords:KEYWORDS,illegal:/(<\/|\?)|=>/,contains:[PROMPT,NUMBER,{begin:/\bself\b/},{beginKeywords:"if",relevance:0},{match:/\bor\b/,scope:"keyword"},STRING,COMMENT_TYPE,hljs.HASH_COMMENT_MODE,{match:[/\bdef/,/\s+/,IDENT_RE,],scope:{1:"keyword",3:"title.function"},contains:[PARAMS]},{variants:[{match:[/\bclass/,/\s+/,IDENT_RE,/\s*/,/\(\s*/,IDENT_RE,/\s*\)/],},{match:[/\bclass/,/\s+/,IDENT_RE],}],scope:{1:"keyword",3:"title.class",6:"title.class.inherited",}},{className:'meta',begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[NUMBER,PARAMS,STRING]}]}}
return python})();hljs.registerLanguage('python',hljsGrammar)})();/*! `python-repl` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function pythonRepl(hljs){return{aliases:['pycon'],contains:[{className:'meta.prompt',starts:{end:/ |$/,starts:{end:'$',subLanguage:'python'}},variants:[{begin:/^>>>(?=[ ]|$)/},{begin:/^\.\.\.(?=[ ]|$)/}]}]}}
return pythonRepl})();hljs.registerLanguage('python-repl',hljsGrammar)})();/*! `ruby` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function ruby(hljs){const regex=hljs.regex;const RUBY_METHOD_RE='([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)';const CLASS_NAME_RE=regex.either(/\b([A-Z]+[a-z0-9]+)+/,/\b([A-Z]+[a-z0-9]+)+[A-Z]+/,);const CLASS_NAME_WITH_NAMESPACE_RE=regex.concat(CLASS_NAME_RE,/(::\w+)*/);const PSEUDO_KWS=["include","extend","prepend","public","private","protected","raise","throw"];const RUBY_KEYWORDS={"variable.constant":["__FILE__","__LINE__","__ENCODING__"],"variable.language":["self","super",],keyword:["alias","and","begin","BEGIN","break","case","class","defined","do","else","elsif","end","END","ensure","for","if","in","module","next","not","or","redo","require","rescue","retry","return","then","undef","unless","until","when","while","yield",...PSEUDO_KWS],built_in:["proc","lambda","attr_accessor","attr_reader","attr_writer","define_method","private_constant","module_function"],literal:["true","false","nil"]};const YARDOCTAG={className:'doctag',begin:'@[A-Za-z]+'};const IRB_OBJECT={begin:'#<',end:'>'};const COMMENT_MODES=[hljs.COMMENT('#','$',{contains:[YARDOCTAG]}),hljs.COMMENT('^=begin','^=end',{contains:[YARDOCTAG],relevance:10}),hljs.COMMENT('^__END__',hljs.MATCH_NOTHING_RE)];const SUBST={className:'subst',begin:/#\{/,end:/\}/,keywords:RUBY_KEYWORDS};const STRING={className:'string',contains:[hljs.BACKSLASH_ESCAPE,SUBST],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/`/,end:/`/},{begin:/%[qQwWx]?\(/,end:/\)/},{begin:/%[qQwWx]?\[/,end:/\]/},{begin:/%[qQwWx]?\{/,end:/\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\//,end:/\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{begin:/%[qQwWx]?\|/,end:/\|/},{begin:/\B\?(\\\d{1,3})/},{begin:/\B\?(\\x[A-Fa-f0-9]{1,2})/},{begin:/\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/},{begin:/\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/},{begin:/\B\?\\(c|C-)[\x20-\x7e]/},{begin:/\B\?\\?\S/},{begin:regex.concat(/<<[-~]?'?/,regex.lookahead(/(\w+)(?=\W)[^\n]*\n(?:[^\n]*\n)*?\s*\1\b/)),contains:[hljs.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,contains:[hljs.BACKSLASH_ESCAPE,SUBST]})]}]};const decimal='[1-9](_?[0-9])*|0';const digits='[0-9](_?[0-9])*';const NUMBER={className:'number',relevance:0,variants:[{begin:`\\b(${decimal})(\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\b`},{begin:"\\b0[dD][0-9](_?[0-9])*r?i?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*r?i?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*r?i?\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b"},{begin:"\\b0(_?[0-7])+r?i?\\b"}]};const PARAMS={variants:[{match:/\(\)/,},{className:'params',begin:/\(/,end:/(?=\))/,excludeBegin:!0,endsParent:!0,keywords:RUBY_KEYWORDS,}]};const INCLUDE_EXTEND={match:[/(include|extend)\s+/,CLASS_NAME_WITH_NAMESPACE_RE],scope:{2:"title.class"},keywords:RUBY_KEYWORDS};const CLASS_DEFINITION={variants:[{match:[/class\s+/,CLASS_NAME_WITH_NAMESPACE_RE,/\s+<\s+/,CLASS_NAME_WITH_NAMESPACE_RE]},{match:[/\b(class|module)\s+/,CLASS_NAME_WITH_NAMESPACE_RE]}],scope:{2:"title.class",4:"title.class.inherited"},keywords:RUBY_KEYWORDS};const UPPER_CASE_CONSTANT={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};const METHOD_DEFINITION={match:[/def/,/\s+/,RUBY_METHOD_RE],scope:{1:"keyword",3:"title.function"},contains:[PARAMS]};const OBJECT_CREATION={relevance:0,match:[CLASS_NAME_WITH_NAMESPACE_RE,/\.new[.(]/],scope:{1:"title.class"}};const CLASS_REFERENCE={relevance:0,match:CLASS_NAME_RE,scope:"title.class"};const RUBY_DEFAULT_CONTAINS=[STRING,CLASS_DEFINITION,INCLUDE_EXTEND,OBJECT_CREATION,UPPER_CASE_CONSTANT,CLASS_REFERENCE,METHOD_DEFINITION,{begin:hljs.IDENT_RE+'::'},{className:'symbol',begin:hljs.UNDERSCORE_IDENT_RE+'(!|\\?)?:',relevance:0},{className:'symbol',begin:':(?!\\s)',contains:[STRING,{begin:RUBY_METHOD_RE}],relevance:0},NUMBER,{className:"variable",begin:'(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])'+`(?![A-Za-z])(?![@$?'])`},{className:'params',begin:/\|/,end:/\|/,excludeBegin:!0,excludeEnd:!0,relevance:0,keywords:RUBY_KEYWORDS},{begin:'('+hljs.RE_STARTERS_RE+'|unless)\\s*',keywords:'unless',contains:[{className:'regexp',contains:[hljs.BACKSLASH_ESCAPE,SUBST],illegal:/\n/,variants:[{begin:'/',end:'/[a-z]*'},{begin:/%r\{/,end:/\}[a-z]*/},{begin:'%r\\(',end:'\\)[a-z]*'},{begin:'%r!',end:'![a-z]*'},{begin:'%r\\[',end:'\\][a-z]*'}]}].concat(IRB_OBJECT,COMMENT_MODES),relevance:0}].concat(IRB_OBJECT,COMMENT_MODES);SUBST.contains=RUBY_DEFAULT_CONTAINS;PARAMS.contains=RUBY_DEFAULT_CONTAINS;const SIMPLE_PROMPT="[>?]>";const DEFAULT_PROMPT="[\\w#]+\\(\\w+\\):\\d+:\\d+[>*]";const RVM_PROMPT="(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>";const IRB_DEFAULT=[{begin:/^\s*=>/,starts:{end:'$',contains:RUBY_DEFAULT_CONTAINS}},{className:'meta.prompt',begin:'^('+SIMPLE_PROMPT+"|"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')(?=[ ])',starts:{end:'$',keywords:RUBY_KEYWORDS,contains:RUBY_DEFAULT_CONTAINS}}];COMMENT_MODES.unshift(IRB_OBJECT);return{name:'Ruby',aliases:['rb','gemspec','podspec','thor','irb'],keywords:RUBY_KEYWORDS,illegal:/\/\*/,contains:[hljs.SHEBANG({binary:"ruby"})].concat(IRB_DEFAULT).concat(COMMENT_MODES).concat(RUBY_DEFAULT_CONTAINS)}}
return ruby})();hljs.registerLanguage('ruby',hljsGrammar)})();/*! `rust` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function rust(hljs){const regex=hljs.regex;const FUNCTION_INVOKE={className:"title.function.invoke",relevance:0,begin:regex.concat(/\b/,/(?!let|for|while|if|else|match\b)/,hljs.IDENT_RE,regex.lookahead(/\s*\(/))};const NUMBER_SUFFIX='([ui](8|16|32|64|128|size)|f(32|64))\?';const KEYWORDS=["abstract","as","async","await","become","box","break","const","continue","crate","do","dyn","else","enum","extern","false","final","fn","for","if","impl","in","let","loop","macro","match","mod","move","mut","override","priv","pub","ref","return","self","Self","static","struct","super","trait","true","try","type","typeof","unsafe","unsized","use","virtual","where","while","yield"];const LITERALS=["true","false","Some","None","Ok","Err"];const BUILTINS=['drop ',"Copy","Send","Sized","Sync","Drop","Fn","FnMut","FnOnce","ToOwned","Clone","Debug","PartialEq","PartialOrd","Eq","Ord","AsRef","AsMut","Into","From","Default","Iterator","Extend","IntoIterator","DoubleEndedIterator","ExactSizeIterator","SliceConcatExt","ToString","assert!","assert_eq!","bitflags!","bytes!","cfg!","col!","concat!","concat_idents!","debug_assert!","debug_assert_eq!","env!","eprintln!","panic!","file!","format!","format_args!","include_bytes!","include_str!","line!","local_data_key!","module_path!","option_env!","print!","println!","select!","stringify!","try!","unimplemented!","unreachable!","vec!","write!","writeln!","macro_rules!","assert_ne!","debug_assert_ne!"];const TYPES=["i8","i16","i32","i64","i128","isize","u8","u16","u32","u64","u128","usize","f32","f64","str","char","bool","Box","Option","Result","String","Vec"];return{name:'Rust',aliases:['rs'],keywords:{$pattern:hljs.IDENT_RE+'!?',type:TYPES,keyword:KEYWORDS,literal:LITERALS,built_in:BUILTINS},illegal:'</',contains:[hljs.C_LINE_COMMENT_MODE,hljs.COMMENT('/\\*','\\*/',{contains:['self']}),hljs.inherit(hljs.QUOTE_STRING_MODE,{begin:/b?"/,illegal:null}),{className:'string',variants:[{begin:/b?r(#*)"(.|\n)*?"\1(?!#)/},{begin:/b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/}]},{className:'symbol',begin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:'number',variants:[{begin:'\\b0b([01_]+)'+NUMBER_SUFFIX},{begin:'\\b0o([0-7_]+)'+NUMBER_SUFFIX},{begin:'\\b0x([A-Fa-f0-9_]+)'+NUMBER_SUFFIX},{begin:'\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'+NUMBER_SUFFIX}],relevance:0},{begin:[/fn/,/\s+/,hljs.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.function"}},{className:'meta',begin:'#!?\\[',end:'\\]',contains:[{className:'string',begin:/"/,end:/"/,contains:[hljs.BACKSLASH_ESCAPE]}]},{begin:[/let/,/\s+/,/(?:mut\s+)?/,hljs.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"keyword",4:"variable"}},{begin:[/for/,/\s+/,hljs.UNDERSCORE_IDENT_RE,/\s+/,/in/],className:{1:"keyword",3:"variable",5:"keyword"}},{begin:[/type/,/\s+/,hljs.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:[/(?:trait|enum|struct|union|impl|for)/,/\s+/,hljs.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:hljs.IDENT_RE+'::',keywords:{keyword:"Self",built_in:BUILTINS,type:TYPES}},{className:"punctuation",begin:'->'},FUNCTION_INVOKE]}}
return rust})();hljs.registerLanguage('rust',hljsGrammar)})();/*! `scheme` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function scheme(hljs){const SCHEME_IDENT_RE='[^\\(\\)\\[\\]\\{\\}",\'`;#|\\\\\\s]+';const SCHEME_SIMPLE_NUMBER_RE='(-|\\+)?\\d+([./]\\d+)?';const SCHEME_COMPLEX_NUMBER_RE=SCHEME_SIMPLE_NUMBER_RE+'[+\\-]'+SCHEME_SIMPLE_NUMBER_RE+'i';const KEYWORDS={$pattern:SCHEME_IDENT_RE,built_in:'case-lambda call/cc class define-class exit-handler field import '+'inherit init-field interface let*-values let-values let/ec mixin '+'opt-lambda override protect provide public rename require '+'require-for-syntax syntax syntax-case syntax-error unit/sig unless '+'when with-syntax and begin call-with-current-continuation '+'call-with-input-file call-with-output-file case cond define '+'define-syntax delay do dynamic-wind else for-each if lambda let let* '+'let-syntax letrec letrec-syntax map or syntax-rules \' * + , ,@ - ... / '+'; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan '+'boolean? caar cadr call-with-input-file call-with-output-file '+'call-with-values car cdddar cddddr cdr ceiling char->integer '+'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? '+'char-downcase char-lower-case? char-numeric? char-ready? char-upcase '+'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? '+'char? close-input-port close-output-port complex? cons cos '+'current-input-port current-output-port denominator display eof-object? '+'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor '+'force gcd imag-part inexact->exact inexact? input-port? integer->char '+'integer? interaction-environment lcm length list list->string '+'list->vector list-ref list-tail list? load log magnitude make-polar '+'make-rectangular make-string make-vector max member memq memv min '+'modulo negative? newline not null-environment null? number->string '+'number? numerator odd? open-input-file open-output-file output-port? '+'pair? peek-char port? positive? procedure? quasiquote quote quotient '+'rational? rationalize read read-char real-part real? remainder reverse '+'round scheme-report-environment set! set-car! set-cdr! sin sqrt string '+'string->list string->number string->symbol string-append string-ci<=? '+'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy '+'string-fill! string-length string-ref string-set! string<=? string<? '+'string=? string>=? string>? string? substring symbol->string symbol? '+'tan transcript-off transcript-on truncate values vector '+'vector->list vector-fill! vector-length vector-ref vector-set! '+'with-input-from-file with-output-to-file write write-char zero?'};const LITERAL={className:'literal',begin:'(#t|#f|#\\\\'+SCHEME_IDENT_RE+'|#\\\\.)'};const NUMBER={className:'number',variants:[{begin:SCHEME_SIMPLE_NUMBER_RE,relevance:0},{begin:SCHEME_COMPLEX_NUMBER_RE,relevance:0},{begin:'#b[0-1]+(/[0-1]+)?'},{begin:'#o[0-7]+(/[0-7]+)?'},{begin:'#x[0-9a-f]+(/[0-9a-f]+)?'}]};const STRING=hljs.QUOTE_STRING_MODE;const COMMENT_MODES=[hljs.COMMENT(';','$',{relevance:0}),hljs.COMMENT('#\\|','\\|#')];const IDENT={begin:SCHEME_IDENT_RE,relevance:0};const QUOTED_IDENT={className:'symbol',begin:'\''+SCHEME_IDENT_RE};const BODY={endsWithParent:!0,relevance:0};const QUOTED_LIST={variants:[{begin:/'/},{begin:'`'}],contains:[{begin:'\\(',end:'\\)',contains:['self',LITERAL,STRING,NUMBER,IDENT,QUOTED_IDENT]}]};const NAME={className:'name',relevance:0,begin:SCHEME_IDENT_RE,keywords:KEYWORDS};const LAMBDA={begin:/lambda/,endsWithParent:!0,returnBegin:!0,contains:[NAME,{endsParent:!0,variants:[{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/}],contains:[IDENT]}]};const LIST={variants:[{begin:'\\(',end:'\\)'},{begin:'\\[',end:'\\]'}],contains:[LAMBDA,NAME,BODY]};BODY.contains=[LITERAL,NUMBER,STRING,IDENT,QUOTED_IDENT,QUOTED_LIST,LIST].concat(COMMENT_MODES);return{name:'Scheme',aliases:['scm'],illegal:/\S/,contains:[hljs.SHEBANG(),NUMBER,STRING,QUOTED_IDENT,QUOTED_LIST,LIST].concat(COMMENT_MODES)}}
return scheme})();hljs.registerLanguage('scheme',hljsGrammar)})();/*! `scss` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';const MODES=(hljs)=>{return{IMPORTANT:{scope:'meta',begin:'!important'},BLOCK_COMMENT:hljs.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:'number',begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:'selector-attr',begin:/\[/,end:/\]/,illegal:'$',contains:[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:'number',begin:hljs.NUMBER_RE+'('+'%|em|ex|ch|rem'+'|vw|vh|vmin|vmax'+'|cm|mm|in|pt|pc|px'+'|deg|grad|rad|turn'+'|s|ms'+'|Hz|kHz'+'|dpi|dpcm|dppx'+')?',relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}};const HTML_TAGS=['a','abbr','address','article','aside','audio','b','blockquote','body','button','canvas','caption','cite','code','dd','del','details','dfn','div','dl','dt','em','fieldset','figcaption','figure','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','html','i','iframe','img','input','ins','kbd','label','legend','li','main','mark','menu','nav','object','ol','p','q','quote','samp','section','span','strong','summary','sup','table','tbody','td','textarea','tfoot','th','thead','time','tr','ul','var','video'];const SVG_TAGS=['defs','g','marker','mask','pattern','svg','switch','symbol','feBlend','feColorMatrix','feComponentTransfer','feComposite','feConvolveMatrix','feDiffuseLighting','feDisplacementMap','feFlood','feGaussianBlur','feImage','feMerge','feMorphology','feOffset','feSpecularLighting','feTile','feTurbulence','linearGradient','radialGradient','stop','circle','ellipse','image','line','path','polygon','polyline','rect','text','use','textPath','tspan','foreignObject','clipPath'];const TAGS=[...HTML_TAGS,...SVG_TAGS,];const MEDIA_FEATURES=['any-hover','any-pointer','aspect-ratio','color','color-gamut','color-index','device-aspect-ratio','device-height','device-width','display-mode','forced-colors','grid','height','hover','inverted-colors','monochrome','orientation','overflow-block','overflow-inline','pointer','prefers-color-scheme','prefers-contrast','prefers-reduced-motion','prefers-reduced-transparency','resolution','scan','scripting','update','width','min-width','max-width','min-height','max-height'].sort().reverse();const PSEUDO_CLASSES=['active','any-link','blank','checked','current','default','defined','dir','disabled','drop','empty','enabled','first','first-child','first-of-type','fullscreen','future','focus','focus-visible','focus-within','has','host','host-context','hover','indeterminate','in-range','invalid','is','lang','last-child','last-of-type','left','link','local-link','not','nth-child','nth-col','nth-last-child','nth-last-col','nth-last-of-type','nth-of-type','only-child','only-of-type','optional','out-of-range','past','placeholder-shown','read-only','read-write','required','right','root','scope','target','target-within','user-invalid','valid','visited','where'].sort().reverse();const PSEUDO_ELEMENTS=['after','backdrop','before','cue','cue-region','first-letter','first-line','grammar-error','marker','part','placeholder','selection','slotted','spelling-error'].sort().reverse();const ATTRIBUTES=['align-content','align-items','align-self','alignment-baseline','all','animation','animation-delay','animation-direction','animation-duration','animation-fill-mode','animation-iteration-count','animation-name','animation-play-state','animation-timing-function','backface-visibility','background','background-attachment','background-blend-mode','background-clip','background-color','background-image','background-origin','background-position','background-repeat','background-size','baseline-shift','block-size','border','border-block','border-block-color','border-block-end','border-block-end-color','border-block-end-style','border-block-end-width','border-block-start','border-block-start-color','border-block-start-style','border-block-start-width','border-block-style','border-block-width','border-bottom','border-bottom-color','border-bottom-left-radius','border-bottom-right-radius','border-bottom-style','border-bottom-width','border-collapse','border-color','border-image','border-image-outset','border-image-repeat','border-image-slice','border-image-source','border-image-width','border-inline','border-inline-color','border-inline-end','border-inline-end-color','border-inline-end-style','border-inline-end-width','border-inline-start','border-inline-start-color','border-inline-start-style','border-inline-start-width','border-inline-style','border-inline-width','border-left','border-left-color','border-left-style','border-left-width','border-radius','border-right','border-right-color','border-right-style','border-right-width','border-spacing','border-style','border-top','border-top-color','border-top-left-radius','border-top-right-radius','border-top-style','border-top-width','border-width','bottom','box-decoration-break','box-shadow','box-sizing','break-after','break-before','break-inside','cx','cy','caption-side','caret-color','clear','clip','clip-path','clip-rule','color','color-interpolation','color-interpolation-filters','color-profile','color-rendering','column-count','column-fill','column-gap','column-rule','column-rule-color','column-rule-style','column-rule-width','column-span','column-width','columns','contain','content','content-visibility','counter-increment','counter-reset','cue','cue-after','cue-before','cursor','direction','display','dominant-baseline','empty-cells','enable-background','fill','fill-opacity','fill-rule','filter','flex','flex-basis','flex-direction','flex-flow','flex-grow','flex-shrink','flex-wrap','float','flow','flood-color','flood-opacity','font','font-display','font-family','font-feature-settings','font-kerning','font-language-override','font-size','font-size-adjust','font-smoothing','font-stretch','font-style','font-synthesis','font-variant','font-variant-caps','font-variant-east-asian','font-variant-ligatures','font-variant-numeric','font-variant-position','font-variation-settings','font-weight','gap','glyph-orientation-horizontal','glyph-orientation-vertical','grid','grid-area','grid-auto-columns','grid-auto-flow','grid-auto-rows','grid-column','grid-column-end','grid-column-start','grid-gap','grid-row','grid-row-end','grid-row-start','grid-template','grid-template-areas','grid-template-columns','grid-template-rows','hanging-punctuation','height','hyphens','icon','image-orientation','image-rendering','image-resolution','ime-mode','inline-size','isolation','kerning','justify-content','left','letter-spacing','lighting-color','line-break','line-height','list-style','list-style-image','list-style-position','list-style-type','marker','marker-end','marker-mid','marker-start','mask','margin','margin-block','margin-block-end','margin-block-start','margin-bottom','margin-inline','margin-inline-end','margin-inline-start','margin-left','margin-right','margin-top','marks','mask','mask-border','mask-border-mode','mask-border-outset','mask-border-repeat','mask-border-slice','mask-border-source','mask-border-width','mask-clip','mask-composite','mask-image','mask-mode','mask-origin','mask-position','mask-repeat','mask-size','mask-type','max-block-size','max-height','max-inline-size','max-width','min-block-size','min-height','min-inline-size','min-width','mix-blend-mode','nav-down','nav-index','nav-left','nav-right','nav-up','none','normal','object-fit','object-position','opacity','order','orphans','outline','outline-color','outline-offset','outline-style','outline-width','overflow','overflow-wrap','overflow-x','overflow-y','padding','padding-block','padding-block-end','padding-block-start','padding-bottom','padding-inline','padding-inline-end','padding-inline-start','padding-left','padding-right','padding-top','page-break-after','page-break-before','page-break-inside','pause','pause-after','pause-before','perspective','perspective-origin','pointer-events','position','quotes','r','resize','rest','rest-after','rest-before','right','row-gap','scroll-margin','scroll-margin-block','scroll-margin-block-end','scroll-margin-block-start','scroll-margin-bottom','scroll-margin-inline','scroll-margin-inline-end','scroll-margin-inline-start','scroll-margin-left','scroll-margin-right','scroll-margin-top','scroll-padding','scroll-padding-block','scroll-padding-block-end','scroll-padding-block-start','scroll-padding-bottom','scroll-padding-inline','scroll-padding-inline-end','scroll-padding-inline-start','scroll-padding-left','scroll-padding-right','scroll-padding-top','scroll-snap-align','scroll-snap-stop','scroll-snap-type','scrollbar-color','scrollbar-gutter','scrollbar-width','shape-image-threshold','shape-margin','shape-outside','shape-rendering','stop-color','stop-opacity','stroke','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke-width','speak','speak-as','src','tab-size','table-layout','text-anchor','text-align','text-align-all','text-align-last','text-combine-upright','text-decoration','text-decoration-color','text-decoration-line','text-decoration-style','text-emphasis','text-emphasis-color','text-emphasis-position','text-emphasis-style','text-indent','text-justify','text-orientation','text-overflow','text-rendering','text-shadow','text-transform','text-underline-position','top','transform','transform-box','transform-origin','transform-style','transition','transition-delay','transition-duration','transition-property','transition-timing-function','unicode-bidi','vector-effect','vertical-align','visibility','voice-balance','voice-duration','voice-family','voice-pitch','voice-range','voice-rate','voice-stress','voice-volume','white-space','widows','width','will-change','word-break','word-spacing','word-wrap','writing-mode','x','y','z-index'].sort().reverse();function scss(hljs){const modes=MODES(hljs);const PSEUDO_ELEMENTS$1=PSEUDO_ELEMENTS;const PSEUDO_CLASSES$1=PSEUDO_CLASSES;const AT_IDENTIFIER='@[a-z-]+';const AT_MODIFIERS="and or not only";const IDENT_RE='[a-zA-Z-][a-zA-Z0-9_-]*';const VARIABLE={className:'variable',begin:'(\\$'+IDENT_RE+')\\b',relevance:0};return{name:'SCSS',case_insensitive:!0,illegal:'[=/|\']',contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,modes.CSS_NUMBER_MODE,{className:'selector-id',begin:'#[A-Za-z0-9_-]+',relevance:0},{className:'selector-class',begin:'\\.[A-Za-z0-9_-]+',relevance:0},modes.ATTRIBUTE_SELECTOR_MODE,{className:'selector-tag',begin:'\\b('+TAGS.join('|')+')\\b',relevance:0},{className:'selector-pseudo',begin:':('+PSEUDO_CLASSES$1.join('|')+')'},{className:'selector-pseudo',begin:':(:)?('+PSEUDO_ELEMENTS$1.join('|')+')'},VARIABLE,{begin:/\(/,end:/\)/,contains:[modes.CSS_NUMBER_MODE]},modes.CSS_VARIABLE,{className:'attribute',begin:'\\b('+ATTRIBUTES.join('|')+')\\b'},{begin:'\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b'},{begin:/:/,end:/[;}{]/,relevance:0,contains:[modes.BLOCK_COMMENT,VARIABLE,modes.HEXCOLOR,modes.CSS_NUMBER_MODE,hljs.QUOTE_STRING_MODE,hljs.APOS_STRING_MODE,modes.IMPORTANT,modes.FUNCTION_DISPATCH]},{begin:'@(page|font-face)',keywords:{$pattern:AT_IDENTIFIER,keyword:'@page @font-face'}},{begin:'@',end:'[{;]',returnBegin:!0,keywords:{$pattern:/[a-z-]+/,keyword:AT_MODIFIERS,attribute:MEDIA_FEATURES.join(" ")},contains:[{begin:AT_IDENTIFIER,className:"keyword"},{begin:/[a-z-]+(?=:)/,className:"attribute"},VARIABLE,hljs.QUOTE_STRING_MODE,hljs.APOS_STRING_MODE,modes.HEXCOLOR,modes.CSS_NUMBER_MODE]},modes.FUNCTION_DISPATCH]}}
return scss})();hljs.registerLanguage('scss',hljsGrammar)})();/*! `shell` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function shell(hljs){return{name:'Shell Session',aliases:['console','shellsession'],contains:[{className:'meta.prompt',begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\](?=\s*$)/,subLanguage:'bash'}}]}}
return shell})();hljs.registerLanguage('shell',hljsGrammar)})();/*! `sql` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function sql(hljs){const regex=hljs.regex;const COMMENT_MODE=hljs.COMMENT('--','$');const STRING={className:'string',variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]};const QUOTED_IDENTIFIER={begin:/"/,end:/"/,contains:[{begin:/""/}]};const LITERALS=["true","false","unknown"];const MULTI_WORD_TYPES=["double precision","large object","with timezone","without timezone"];const TYPES=['bigint','binary','blob','boolean','char','character','clob','date','dec','decfloat','decimal','float','int','integer','interval','nchar','nclob','national','numeric','real','row','smallint','time','timestamp','varchar','varying','varbinary'];const NON_RESERVED_WORDS=["add","asc","collation","desc","final","first","last","view"];const RESERVED_WORDS=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year",];const RESERVED_FUNCTIONS=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket",];const POSSIBLE_WITHOUT_PARENS=["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"];const COMBOS=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"];const FUNCTIONS=RESERVED_FUNCTIONS;const KEYWORDS=[...RESERVED_WORDS,...NON_RESERVED_WORDS].filter((keyword)=>{return!RESERVED_FUNCTIONS.includes(keyword)});const VARIABLE={className:"variable",begin:/@[a-z0-9][a-z0-9_]*/,};const OPERATOR={className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0,};const FUNCTION_CALL={begin:regex.concat(/\b/,regex.either(...FUNCTIONS),/\s*\(/),relevance:0,keywords:{built_in:FUNCTIONS}};function reduceRelevancy(list,{exceptions,when}={}){const qualifyFn=when;exceptions=exceptions||[];return list.map((item)=>{if(item.match(/\|\d+$/)||exceptions.includes(item)){return item}else if(qualifyFn(item)){return `${item}|0`}else{return item}})}
return{name:'SQL',case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:reduceRelevancy(KEYWORDS,{when:(x)=>x.length<3}),literal:LITERALS,type:TYPES,built_in:POSSIBLE_WITHOUT_PARENS},contains:[{begin:regex.either(...COMBOS),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:KEYWORDS.concat(COMBOS),literal:LITERALS,type:TYPES},},{className:"type",begin:regex.either(...MULTI_WORD_TYPES)},FUNCTION_CALL,VARIABLE,STRING,QUOTED_IDENTIFIER,hljs.C_NUMBER_MODE,hljs.C_BLOCK_COMMENT_MODE,COMMENT_MODE,OPERATOR]}}
return sql})();hljs.registerLanguage('sql',hljsGrammar)})();/*! `swift` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function source(re){if(!re)return null;if(typeof re==="string")return re;return re.source}
function lookahead(re){return concat('(?=',re,')')}
function concat(...args){const joined=args.map((x)=>source(x)).join("");return joined}
function stripOptionsFromArgs(args){const opts=args[args.length-1];if(typeof opts==='object'&&opts.constructor===Object){args.splice(args.length-1,1);return opts}else{return{}}}
function either(...args){const opts=stripOptionsFromArgs(args);const joined='('+(opts.capture?"":"?:")+args.map((x)=>source(x)).join("|")+")";return joined}
const keywordWrapper=keyword=>concat(/\b/,keyword,/\w$/.test(keyword)?/\b/:/\B/);const dotKeywords=['Protocol','Type'].map(keywordWrapper);const optionalDotKeywords=['init','self'].map(keywordWrapper);const keywordTypes=['Any','Self'];const keywords=['actor','any','associatedtype','async','await',/as\?/,/as!/,'as','borrowing','break','case','catch','class','consume','consuming','continue','convenience','copy','default','defer','deinit','didSet','distributed','do','dynamic','each','else','enum','extension','fallthrough',/fileprivate\(set\)/,'fileprivate','final','for','func','get','guard','if','import','indirect','infix',/init\?/,/init!/,'inout',/internal\(set\)/,'internal','in','is','isolated','nonisolated','lazy','let','macro','mutating','nonmutating',/open\(set\)/,'open','operator','optional','override','postfix','precedencegroup','prefix',/private\(set\)/,'private','protocol',/public\(set\)/,'public','repeat','required','rethrows','return','set','some','static','struct','subscript','super','switch','throws','throw',/try\?/,/try!/,'try','typealias',/unowned\(safe\)/,/unowned\(unsafe\)/,'unowned','var','weak','where','while','willSet'];const literals=['false','nil','true'];const precedencegroupKeywords=['assignment','associativity','higherThan','left','lowerThan','none','right'];const numberSignKeywords=['#colorLiteral','#column','#dsohandle','#else','#elseif','#endif','#error','#file','#fileID','#fileLiteral','#filePath','#function','#if','#imageLiteral','#keyPath','#line','#selector','#sourceLocation','#warning'];const builtIns=['abs','all','any','assert','assertionFailure','debugPrint','dump','fatalError','getVaList','isKnownUniquelyReferenced','max','min','numericCast','pointwiseMax','pointwiseMin','precondition','preconditionFailure','print','readLine','repeatElement','sequence','stride','swap','swift_unboxFromSwiftValueWithType','transcode','type','unsafeBitCast','unsafeDowncast','withExtendedLifetime','withUnsafeMutablePointer','withUnsafePointer','withVaList','withoutActuallyEscaping','zip'];const operatorHead=either(/[/=\-+!*%<>&|^~?]/,/[\u00A1-\u00A7]/,/[\u00A9\u00AB]/,/[\u00AC\u00AE]/,/[\u00B0\u00B1]/,/[\u00B6\u00BB\u00BF\u00D7\u00F7]/,/[\u2016-\u2017]/,/[\u2020-\u2027]/,/[\u2030-\u203E]/,/[\u2041-\u2053]/,/[\u2055-\u205E]/,/[\u2190-\u23FF]/,/[\u2500-\u2775]/,/[\u2794-\u2BFF]/,/[\u2E00-\u2E7F]/,/[\u3001-\u3003]/,/[\u3008-\u3020]/,/[\u3030]/);const operatorCharacter=either(operatorHead,/[\u0300-\u036F]/,/[\u1DC0-\u1DFF]/,/[\u20D0-\u20FF]/,/[\uFE00-\uFE0F]/,/[\uFE20-\uFE2F]/);const operator=concat(operatorHead,operatorCharacter,'*');const identifierHead=either(/[a-zA-Z_]/,/[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,/[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,/[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,/[\u1E00-\u1FFF]/,/[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,/[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,/[\u2C00-\u2DFF\u2E80-\u2FFF]/,/[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,/[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,/[\uFE47-\uFEFE\uFF00-\uFFFD]/);const identifierCharacter=either(identifierHead,/\d/,/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/);const identifier=concat(identifierHead,identifierCharacter,'*');const typeIdentifier=concat(/[A-Z]/,identifierCharacter,'*');const keywordAttributes=['attached','autoclosure',concat(/convention\(/,either('swift','block','c'),/\)/),'discardableResult','dynamicCallable','dynamicMemberLookup','escaping','freestanding','frozen','GKInspectable','IBAction','IBDesignable','IBInspectable','IBOutlet','IBSegueAction','inlinable','main','nonobjc','NSApplicationMain','NSCopying','NSManaged',concat(/objc\(/,identifier,/\)/),'objc','objcMembers','propertyWrapper','requires_stored_property_inits','resultBuilder','Sendable','testable','UIApplicationMain','unchecked','unknown','usableFromInline','warn_unqualified_access'];const availabilityKeywords=['iOS','iOSApplicationExtension','macOS','macOSApplicationExtension','macCatalyst','macCatalystApplicationExtension','watchOS','watchOSApplicationExtension','tvOS','tvOSApplicationExtension','swift'];function swift(hljs){const WHITESPACE={match:/\s+/,relevance:0};const BLOCK_COMMENT=hljs.COMMENT('/\\*','\\*/',{contains:['self']});const COMMENTS=[hljs.C_LINE_COMMENT_MODE,BLOCK_COMMENT];const DOT_KEYWORD={match:[/\./,either(...dotKeywords,...optionalDotKeywords)],className:{2:"keyword"}};const KEYWORD_GUARD={match:concat(/\./,either(...keywords)),relevance:0};const PLAIN_KEYWORDS=keywords.filter(kw=>typeof kw==='string').concat(["_|0"]);const REGEX_KEYWORDS=keywords.filter(kw=>typeof kw!=='string').concat(keywordTypes).map(keywordWrapper);const KEYWORD={variants:[{className:'keyword',match:either(...REGEX_KEYWORDS,...optionalDotKeywords)}]};const KEYWORDS={$pattern:either(/\b\w+/,/#\w+/),keyword:PLAIN_KEYWORDS.concat(numberSignKeywords),literal:literals};const KEYWORD_MODES=[DOT_KEYWORD,KEYWORD_GUARD,KEYWORD];const BUILT_IN_GUARD={match:concat(/\./,either(...builtIns)),relevance:0};const BUILT_IN={className:'built_in',match:concat(/\b/,either(...builtIns),/(?=\()/)};const BUILT_INS=[BUILT_IN_GUARD,BUILT_IN];const OPERATOR_GUARD={match:/->/,relevance:0};const OPERATOR={className:'operator',relevance:0,variants:[{match:operator},{match:`\\.(\\.|${operatorCharacter})+`}]};const OPERATORS=[OPERATOR_GUARD,OPERATOR];const decimalDigits='([0-9]_*)+';const hexDigits='([0-9a-fA-F]_*)+';const NUMBER={className:'number',relevance:0,variants:[{match:`\\b(${decimalDigits})(\\.(${decimalDigits}))?`+`([eE][+-]?(${decimalDigits}))?\\b`},{match:`\\b0x(${hexDigits})(\\.(${hexDigits}))?`+`([pP][+-]?(${decimalDigits}))?\\b`},{match:/\b0o([0-7]_*)+\b/},{match:/\b0b([01]_*)+\b/}]};const ESCAPED_CHARACTER=(rawDelimiter="")=>({className:'subst',variants:[{match:concat(/\\/,rawDelimiter,/[0\\tnr"']/)},{match:concat(/\\/,rawDelimiter,/u\{[0-9a-fA-F]{1,8}\}/)}]});const ESCAPED_NEWLINE=(rawDelimiter="")=>({className:'subst',match:concat(/\\/,rawDelimiter,/[\t ]*(?:[\r\n]|\r\n)/)});const INTERPOLATION=(rawDelimiter="")=>({className:'subst',label:"interpol",begin:concat(/\\/,rawDelimiter,/\(/),end:/\)/});const MULTILINE_STRING=(rawDelimiter="")=>({begin:concat(rawDelimiter,/"""/),end:concat(/"""/,rawDelimiter),contains:[ESCAPED_CHARACTER(rawDelimiter),ESCAPED_NEWLINE(rawDelimiter),INTERPOLATION(rawDelimiter)]});const SINGLE_LINE_STRING=(rawDelimiter="")=>({begin:concat(rawDelimiter,/"/),end:concat(/"/,rawDelimiter),contains:[ESCAPED_CHARACTER(rawDelimiter),INTERPOLATION(rawDelimiter)]});const STRING={className:'string',variants:[MULTILINE_STRING(),MULTILINE_STRING("#"),MULTILINE_STRING("##"),MULTILINE_STRING("###"),SINGLE_LINE_STRING(),SINGLE_LINE_STRING("#"),SINGLE_LINE_STRING("##"),SINGLE_LINE_STRING("###")]};const REGEXP_CONTENTS=[hljs.BACKSLASH_ESCAPE,{begin:/\[/,end:/\]/,relevance:0,contains:[hljs.BACKSLASH_ESCAPE]}];const BARE_REGEXP_LITERAL={begin:/\/[^\s](?=[^/\n]*\/)/,end:/\//,contains:REGEXP_CONTENTS};const EXTENDED_REGEXP_LITERAL=(rawDelimiter)=>{const begin=concat(rawDelimiter,/\//);const end=concat(/\//,rawDelimiter);return{begin,end,contains:[...REGEXP_CONTENTS,{scope:"comment",begin:`#(?!.*${end})`,end:/$/,},],}};const REGEXP={scope:"regexp",variants:[EXTENDED_REGEXP_LITERAL('###'),EXTENDED_REGEXP_LITERAL('##'),EXTENDED_REGEXP_LITERAL('#'),BARE_REGEXP_LITERAL]};const QUOTED_IDENTIFIER={match:concat(/`/,identifier,/`/)};const IMPLICIT_PARAMETER={className:'variable',match:/\$\d+/};const PROPERTY_WRAPPER_PROJECTION={className:'variable',match:`\\$${identifierCharacter}+`};const IDENTIFIERS=[QUOTED_IDENTIFIER,IMPLICIT_PARAMETER,PROPERTY_WRAPPER_PROJECTION];const AVAILABLE_ATTRIBUTE={match:/(@|#(un)?)available/,scope:'keyword',starts:{contains:[{begin:/\(/,end:/\)/,keywords:availabilityKeywords,contains:[...OPERATORS,NUMBER,STRING]}]}};const KEYWORD_ATTRIBUTE={scope:'keyword',match:concat(/@/,either(...keywordAttributes))};const USER_DEFINED_ATTRIBUTE={scope:'meta',match:concat(/@/,identifier)};const ATTRIBUTES=[AVAILABLE_ATTRIBUTE,KEYWORD_ATTRIBUTE,USER_DEFINED_ATTRIBUTE];const TYPE={match:lookahead(/\b[A-Z]/),relevance:0,contains:[{className:'type',match:concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,identifierCharacter,'+')},{className:'type',match:typeIdentifier,relevance:0},{match:/[?!]+/,relevance:0},{match:/\.\.\./,relevance:0},{match:concat(/\s+&\s+/,lookahead(typeIdentifier)),relevance:0}]};const GENERIC_ARGUMENTS={begin:/</,end:/>/,keywords:KEYWORDS,contains:[...COMMENTS,...KEYWORD_MODES,...ATTRIBUTES,OPERATOR_GUARD,TYPE]};TYPE.contains.push(GENERIC_ARGUMENTS);const TUPLE_ELEMENT_NAME={match:concat(identifier,/\s*:/),keywords:"_|0",relevance:0};const TUPLE={begin:/\(/,end:/\)/,relevance:0,keywords:KEYWORDS,contains:['self',TUPLE_ELEMENT_NAME,...COMMENTS,REGEXP,...KEYWORD_MODES,...BUILT_INS,...OPERATORS,NUMBER,STRING,...IDENTIFIERS,...ATTRIBUTES,TYPE]};const GENERIC_PARAMETERS={begin:/</,end:/>/,keywords:'repeat each',contains:[...COMMENTS,TYPE]};const FUNCTION_PARAMETER_NAME={begin:either(lookahead(concat(identifier,/\s*:/)),lookahead(concat(identifier,/\s+/,identifier,/\s*:/))),end:/:/,relevance:0,contains:[{className:'keyword',match:/\b_\b/},{className:'params',match:identifier}]};const FUNCTION_PARAMETERS={begin:/\(/,end:/\)/,keywords:KEYWORDS,contains:[FUNCTION_PARAMETER_NAME,...COMMENTS,...KEYWORD_MODES,...OPERATORS,NUMBER,STRING,...ATTRIBUTES,TYPE,TUPLE],endsParent:!0,illegal:/["']/};const FUNCTION_OR_MACRO={match:[/(func|macro)/,/\s+/,either(QUOTED_IDENTIFIER.match,identifier,operator)],className:{1:"keyword",3:"title.function"},contains:[GENERIC_PARAMETERS,FUNCTION_PARAMETERS,WHITESPACE],illegal:[/\[/,/%/]};const INIT_SUBSCRIPT={match:[/\b(?:subscript|init[?!]?)/,/\s*(?=[<(])/,],className:{1:"keyword"},contains:[GENERIC_PARAMETERS,FUNCTION_PARAMETERS,WHITESPACE],illegal:/\[|%/};const OPERATOR_DECLARATION={match:[/operator/,/\s+/,operator],className:{1:"keyword",3:"title"}};const PRECEDENCEGROUP={begin:[/precedencegroup/,/\s+/,typeIdentifier],className:{1:"keyword",3:"title"},contains:[TYPE],keywords:[...precedencegroupKeywords,...literals],end:/}/};for(const variant of STRING.variants){const interpolation=variant.contains.find(mode=>mode.label==="interpol");interpolation.keywords=KEYWORDS;const submodes=[...KEYWORD_MODES,...BUILT_INS,...OPERATORS,NUMBER,STRING,...IDENTIFIERS];interpolation.contains=[...submodes,{begin:/\(/,end:/\)/,contains:['self',...submodes]}]}
return{name:'Swift',keywords:KEYWORDS,contains:[...COMMENTS,FUNCTION_OR_MACRO,INIT_SUBSCRIPT,{beginKeywords:'struct protocol class extension enum actor',end:'\\{',excludeEnd:!0,keywords:KEYWORDS,contains:[hljs.inherit(hljs.TITLE_MODE,{className:"title.class",begin:/[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/}),...KEYWORD_MODES]},OPERATOR_DECLARATION,PRECEDENCEGROUP,{beginKeywords:'import',end:/$/,contains:[...COMMENTS],relevance:0},REGEXP,...KEYWORD_MODES,...BUILT_INS,...OPERATORS,NUMBER,STRING,...IDENTIFIERS,...ATTRIBUTES,TYPE,TUPLE]}}
return swift})();hljs.registerLanguage('swift',hljsGrammar)})();/*! `twig` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function twig(hljs){const regex=hljs.regex;const FUNCTION_NAMES=["absolute_url","asset|0","asset_version","attribute","block","constant","controller|0","country_timezones","csrf_token","cycle","date","dump","expression","form|0","form_end","form_errors","form_help","form_label","form_rest","form_row","form_start","form_widget","html_classes","include","is_granted","logout_path","logout_url","max","min","parent","path|0","random","range","relative_path","render","render_esi","source","template_from_string","url|0"];const FILTERS=["abs","abbr_class","abbr_method","batch","capitalize","column","convert_encoding","country_name","currency_name","currency_symbol","data_uri","date","date_modify","default","escape","file_excerpt","file_link","file_relative","filter","first","format","format_args","format_args_as_text","format_currency","format_date","format_datetime","format_file","format_file_from_text","format_number","format_time","html_to_markdown","humanize","inky_to_html","inline_css","join","json_encode","keys","language_name","last","length","locale_name","lower","map","markdown","markdown_to_html","merge","nl2br","number_format","raw","reduce","replace","reverse","round","slice","slug","sort","spaceless","split","striptags","timezone_name","title","trans","transchoice","trim","u|0","upper","url_encode","yaml_dump","yaml_encode"];let TAG_NAMES=["apply","autoescape","block","cache","deprecated","do","embed","extends","filter","flush","for","form_theme","from","if","import","include","macro","sandbox","set","stopwatch","trans","trans_default_domain","transchoice","use","verbatim","with"];TAG_NAMES=TAG_NAMES.concat(TAG_NAMES.map(t=>`end${t}`));const STRING={scope:'string',variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},]};const NUMBER={scope:"number",match:/\d+/};const PARAMS={begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,contains:[STRING,NUMBER]};const FUNCTIONS={beginKeywords:FUNCTION_NAMES.join(" "),keywords:{name:FUNCTION_NAMES},relevance:0,contains:[PARAMS]};const FILTER={match:/\|(?=[A-Za-z_]+:?)/,beginScope:"punctuation",relevance:0,contains:[{match:/[A-Za-z_]+:?/,keywords:FILTERS},]};const tagNamed=(tagnames,{relevance})=>{return{beginScope:{1:'template-tag',3:'name'},relevance:relevance||2,endScope:'template-tag',begin:[/\{%/,/\s*/,regex.either(...tagnames)],end:/%\}/,keywords:"in",contains:[FILTER,FUNCTIONS,STRING,NUMBER]}};const CUSTOM_TAG_RE=/[a-z_]+/;const TAG=tagNamed(TAG_NAMES,{relevance:2});const CUSTOM_TAG=tagNamed([CUSTOM_TAG_RE],{relevance:1});return{name:'Twig',aliases:['craftcms'],case_insensitive:!0,subLanguage:'xml',contains:[hljs.COMMENT(/\{#/,/#\}/),TAG,CUSTOM_TAG,{className:'template-variable',begin:/\{\{/,end:/\}\}/,contains:['self',FILTER,FUNCTIONS,STRING,NUMBER]}]}}
return twig})();hljs.registerLanguage('twig',hljsGrammar)})();/*! `typescript` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';const IDENT_RE='[A-Za-z$_][0-9A-Za-z$_]*';const KEYWORDS=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"];const LITERALS=["true","false","null","undefined","NaN","Infinity"];const TYPES=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"];const ERROR_TYPES=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"];const BUILT_IN_GLOBALS=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"];const BUILT_IN_VARIABLES=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"];const BUILT_INS=[].concat(BUILT_IN_GLOBALS,TYPES,ERROR_TYPES);function javascript(hljs){const regex=hljs.regex;const hasClosingTag=(match,{after})=>{const tag="</"+match[0].slice(1);const pos=match.input.indexOf(tag,after);return pos!==-1};const IDENT_RE$1=IDENT_RE;const FRAGMENT={begin:'<>',end:'</>'};const XML_SELF_CLOSING=/<[A-Za-z0-9\\._:-]+\s*\/>/;const XML_TAG={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(match,response)=>{const afterMatchIndex=match[0].length+match.index;const nextChar=match.input[afterMatchIndex];if(nextChar==="<"||nextChar===","){response.ignoreMatch();return}
if(nextChar===">"){if(!hasClosingTag(match,{after:afterMatchIndex})){response.ignoreMatch()}}
let m;const afterMatch=match.input.substring(afterMatchIndex);if((m=afterMatch.match(/^\s*=/))){response.ignoreMatch();return}
if((m=afterMatch.match(/^\s+extends\s+/))){if(m.index===0){response.ignoreMatch();return}}}};const KEYWORDS$1={$pattern:IDENT_RE,keyword:KEYWORDS,literal:LITERALS,built_in:BUILT_INS,"variable.language":BUILT_IN_VARIABLES};const decimalDigits='[0-9](_?[0-9])*';const frac=`\\.(${decimalDigits})`;const decimalInteger=`0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;const NUMBER={className:'number',variants:[{begin:`(\\b(${decimalInteger})((${frac})|\\.)?|(${frac}))`+`[eE][+-]?(${decimalDigits})\\b`},{begin:`\\b(${decimalInteger})\\b((${frac})\\b|\\.)?|(${frac})\\b`},{begin:`\\b(0|[1-9](_?[0-9])*)n\\b`},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"},],relevance:0};const SUBST={className:'subst',begin:'\\$\\{',end:'\\}',keywords:KEYWORDS$1,contains:[]};const HTML_TEMPLATE={begin:'html`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'xml'}};const CSS_TEMPLATE={begin:'css`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'css'}};const GRAPHQL_TEMPLATE={begin:'gql`',end:'',starts:{end:'`',returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:'graphql'}};const TEMPLATE_STRING={className:'string',begin:'`',end:'`',contains:[hljs.BACKSLASH_ESCAPE,SUBST]};const JSDOC_COMMENT=hljs.COMMENT(/\/\*\*(?!\/)/,'\\*/',{relevance:0,contains:[{begin:'(?=@[A-Za-z]+)',relevance:0,contains:[{className:'doctag',begin:'@[A-Za-z]+'},{className:'type',begin:'\\{',end:'\\}',excludeEnd:!0,excludeBegin:!0,relevance:0},{className:'variable',begin:IDENT_RE$1+'(?=\\s*(-)|$)',endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]});const COMMENT={className:"comment",variants:[JSDOC_COMMENT,hljs.C_BLOCK_COMMENT_MODE,hljs.C_LINE_COMMENT_MODE]};const SUBST_INTERNALS=[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,GRAPHQL_TEMPLATE,TEMPLATE_STRING,{match:/\$\d+/},NUMBER,];SUBST.contains=SUBST_INTERNALS.concat({begin:/\{/,end:/\}/,keywords:KEYWORDS$1,contains:["self"].concat(SUBST_INTERNALS)});const SUBST_AND_COMMENTS=[].concat(COMMENT,SUBST.contains);const PARAMS_CONTAINS=SUBST_AND_COMMENTS.concat([{begin:/\(/,end:/\)/,keywords:KEYWORDS$1,contains:["self"].concat(SUBST_AND_COMMENTS)}]);const PARAMS={className:'params',begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:PARAMS_CONTAINS};const CLASS_OR_EXTENDS={variants:[{match:[/class/,/\s+/,IDENT_RE$1,/\s+/,/extends/,/\s+/,regex.concat(IDENT_RE$1,"(",regex.concat(/\./,IDENT_RE$1),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,IDENT_RE$1],scope:{1:"keyword",3:"title.class"}},]};const CLASS_REFERENCE={relevance:0,match:regex.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/,),className:"title.class",keywords:{_:[...TYPES,...ERROR_TYPES]}};const USE_STRICT={label:"use_strict",className:'meta',relevance:10,begin:/^\s*['"]use (strict|asm)['"]/};const FUNCTION_DEFINITION={variants:[{match:[/function/,/\s+/,IDENT_RE$1,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[PARAMS],illegal:/%/};const UPPER_CASE_CONSTANT={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};function noneOf(list){return regex.concat("(?!",list.join("|"),")")}
const FUNCTION_CALL={match:regex.concat(/\b/,noneOf([...BUILT_IN_GLOBALS,"super","import"]),IDENT_RE$1,regex.lookahead(/\(/)),className:"title.function",relevance:0};const PROPERTY_ACCESS={begin:regex.concat(/\./,regex.lookahead(regex.concat(IDENT_RE$1,/(?![0-9A-Za-z$_(])/))),end:IDENT_RE$1,excludeBegin:!0,keywords:"prototype",className:"property",relevance:0};const GETTER_OR_SETTER={match:[/get|set/,/\s+/,IDENT_RE$1,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},PARAMS]};const FUNC_LEAD_IN_RE='(\\('+'[^()]*(\\('+'[^()]*(\\('+'[^()]*'+'\\)[^()]*)*'+'\\)[^()]*)*'+'\\)|'+hljs.UNDERSCORE_IDENT_RE+')\\s*=>';const FUNCTION_VARIABLE={match:[/const|var|let/,/\s+/,IDENT_RE$1,/\s*/,/=\s*/,/(async\s*)?/,regex.lookahead(FUNC_LEAD_IN_RE)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[PARAMS]};return{name:'JavaScript',aliases:['js','jsx','mjs','cjs'],keywords:KEYWORDS$1,exports:{PARAMS_CONTAINS,CLASS_REFERENCE},illegal:/#(?![$_A-z])/,contains:[hljs.SHEBANG({label:"shebang",binary:"node",relevance:5}),USE_STRICT,hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,GRAPHQL_TEMPLATE,TEMPLATE_STRING,COMMENT,{match:/\$\d+/},NUMBER,CLASS_REFERENCE,{className:'attr',begin:IDENT_RE$1+regex.lookahead(':'),relevance:0},FUNCTION_VARIABLE,{begin:'('+hljs.RE_STARTERS_RE+'|\\b(case|return|throw)\\b)\\s*',keywords:'return throw case',relevance:0,contains:[COMMENT,hljs.REGEXP_MODE,{className:'function',begin:FUNC_LEAD_IN_RE,returnBegin:!0,end:'\\s*=>',contains:[{className:'params',variants:[{begin:hljs.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:PARAMS_CONTAINS}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:FRAGMENT.begin,end:FRAGMENT.end},{match:XML_SELF_CLOSING},{begin:XML_TAG.begin,'on:begin':XML_TAG.isTrulyOpeningTag,end:XML_TAG.end}],subLanguage:'xml',contains:[{begin:XML_TAG.begin,end:XML_TAG.end,skip:!0,contains:['self']}]}],},FUNCTION_DEFINITION,{beginKeywords:"while if switch catch for"},{begin:'\\b(?!function)'+hljs.UNDERSCORE_IDENT_RE+'\\('+'[^()]*(\\('+'[^()]*(\\('+'[^()]*'+'\\)[^()]*)*'+'\\)[^()]*)*'+'\\)\\s*\\{',returnBegin:!0,label:"func.def",contains:[PARAMS,hljs.inherit(hljs.TITLE_MODE,{begin:IDENT_RE$1,className:"title.function"})]},{match:/\.\.\./,relevance:0},PROPERTY_ACCESS,{match:'\\$'+IDENT_RE$1,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[PARAMS]},FUNCTION_CALL,UPPER_CASE_CONSTANT,CLASS_OR_EXTENDS,GETTER_OR_SETTER,{match:/\$[(.]/}]}}
function typescript(hljs){const tsLanguage=javascript(hljs);const IDENT_RE$1=IDENT_RE;const TYPES=["any","void","number","boolean","string","object","never","symbol","bigint","unknown"];const NAMESPACE={beginKeywords:'namespace',end:/\{/,excludeEnd:!0,contains:[tsLanguage.exports.CLASS_REFERENCE]};const INTERFACE={beginKeywords:'interface',end:/\{/,excludeEnd:!0,keywords:{keyword:'interface extends',built_in:TYPES},contains:[tsLanguage.exports.CLASS_REFERENCE]};const USE_STRICT={className:'meta',relevance:10,begin:/^\s*['"]use strict['"]/};const TS_SPECIFIC_KEYWORDS=["type","namespace","interface","public","private","protected","implements","declare","abstract","readonly","enum","override"];const KEYWORDS$1={$pattern:IDENT_RE,keyword:KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),literal:LITERALS,built_in:BUILT_INS.concat(TYPES),"variable.language":BUILT_IN_VARIABLES};const DECORATOR={className:'meta',begin:'@'+IDENT_RE$1,};const swapMode=(mode,label,replacement)=>{const indx=mode.contains.findIndex(m=>m.label===label);if(indx===-1){throw new Error("can not find mode to replace")}
mode.contains.splice(indx,1,replacement)};Object.assign(tsLanguage.keywords,KEYWORDS$1);tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);tsLanguage.contains=tsLanguage.contains.concat([DECORATOR,NAMESPACE,INTERFACE,]);swapMode(tsLanguage,"shebang",hljs.SHEBANG());swapMode(tsLanguage,"use_strict",USE_STRICT);const functionDeclaration=tsLanguage.contains.find(m=>m.label==="func.def");functionDeclaration.relevance=0;Object.assign(tsLanguage,{name:'TypeScript',aliases:['ts','tsx','mts','cts']});return tsLanguage}
return typescript})();hljs.registerLanguage('typescript',hljsGrammar)})();/*! `vbnet` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function vbnet(hljs){const regex=hljs.regex;const CHARACTER={className:'string',begin:/"(""|[^/n])"C\b/};const STRING={className:'string',begin:/"/,end:/"/,illegal:/\n/,contains:[{begin:/""/}]};const MM_DD_YYYY=/\d{1,2}\/\d{1,2}\/\d{4}/;const YYYY_MM_DD=/\d{4}-\d{1,2}-\d{1,2}/;const TIME_12H=/(\d|1[012])(:\d+){0,2} *(AM|PM)/;const TIME_24H=/\d{1,2}(:\d{1,2}){1,2}/;const DATE={className:'literal',variants:[{begin:regex.concat(/# */,regex.either(YYYY_MM_DD,MM_DD_YYYY),/ *#/)},{begin:regex.concat(/# */,TIME_24H,/ *#/)},{begin:regex.concat(/# */,TIME_12H,/ *#/)},{begin:regex.concat(/# */,regex.either(YYYY_MM_DD,MM_DD_YYYY),/ +/,regex.either(TIME_12H,TIME_24H),/ *#/)}]};const NUMBER={className:'number',relevance:0,variants:[{begin:/\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/},{begin:/\b\d[\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\dA-F_]+((U?[SIL])|[%&])?/},{begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]};const LABEL={className:'label',begin:/^\w+:/};const DOC_COMMENT=hljs.COMMENT(/'''/,/$/,{contains:[{className:'doctag',begin:/<\/?/,end:/>/}]});const COMMENT=hljs.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\t ]|^)REM(?=\s)/}]});const DIRECTIVES={className:'meta',begin:/[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,end:/$/,keywords:{keyword:'const disable else elseif enable end externalsource if region then'},contains:[COMMENT]};return{name:'Visual Basic .NET',aliases:['vb'],case_insensitive:!0,classNameAliases:{label:'symbol'},keywords:{keyword:'addhandler alias aggregate ansi as async assembly auto binary by byref byval '+'call case catch class compare const continue custom declare default delegate dim distinct do '+'each equals else elseif end enum erase error event exit explicit finally for friend from function '+'get global goto group handles if implements imports in inherits interface into iterator '+'join key let lib loop me mid module mustinherit mustoverride mybase myclass '+'namespace narrowing new next notinheritable notoverridable '+'of off on operator option optional order overloads overridable overrides '+'paramarray partial preserve private property protected public '+'raiseevent readonly redim removehandler resume return '+'select set shadows shared skip static step stop structure strict sub synclock '+'take text then throw to try unicode until using when where while widening with withevents writeonly yield',built_in:'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor '+'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',type:'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',literal:'true false nothing'},illegal:'//|\\{|\\}|endif|gosub|variant|wend|^\\$ ',contains:[CHARACTER,STRING,DATE,NUMBER,LABEL,DOC_COMMENT,COMMENT,DIRECTIVES]}}
return vbnet})();hljs.registerLanguage('vbnet',hljsGrammar)})();/*! `vim` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function vim(hljs){return{name:'Vim Script',keywords:{$pattern:/[!#@\w]+/,keyword:'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+'cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc '+'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',built_in:'synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv '+'complete_check add getwinposx getqflist getwinposy screencol '+'clearmatches empty extend getcmdpos mzeval garbagecollect setreg '+'ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable '+'shiftwidth max sinh isdirectory synID system inputrestore winline '+'atan visualmode inputlist tabpagewinnr round getregtype mapcheck '+'hasmapto histdel argidx findfile sha256 exists toupper getcmdline '+'taglist string getmatches bufnr strftime winwidth bufexists '+'strtrans tabpagebuflist setcmdpos remote_read printf setloclist '+'getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval '+'resolve libcallnr foldclosedend reverse filter has_key bufname '+'str2float strlen setline getcharmod setbufvar index searchpos '+'shellescape undofile foldclosed setqflist buflisted strchars str2nr '+'virtcol floor remove undotree remote_expr winheight gettabwinvar '+'reltime cursor tabpagenr finddir localtime acos getloclist search '+'tanh matchend rename gettabvar strdisplaywidth type abs py3eval '+'setwinvar tolower wildmenumode log10 spellsuggest bufloaded '+'synconcealed nextnonblank server2client complete settabwinvar '+'executable input wincol setmatches getftype hlID inputsave '+'searchpair or screenrow line settabvar histadd deepcopy strpart '+'remote_peek and eval getftime submatch screenchar winsaveview '+'matchadd mkdir screenattr getfontname libcall reltimestr getfsize '+'winnr invert pow getbufline byte2line soundfold repeat fnameescape '+'tagfiles sin strwidth spellbadword trunc maparg log lispindent '+'hostname setpos globpath remote_foreground getchar synIDattr '+'fnamemodify cscope_connection stridx winbufnr indent min '+'complete_add nr2char searchpairpos inputdialog values matchlist '+'items hlexists strridx browsedir expand fmod pathshorten line2byte '+'argc count getwinvar glob foldtextresult getreg foreground cosh '+'matchdelete has char2nr simplify histget searchdecl iconv '+'winrestcmd pumvisible writefile foldlevel haslocaldir keys cos '+'matchstr foldtext histnr tan tempname getcwd byteidx getbufvar '+'islocked escape eventhandler remote_send serverlist winrestview '+'synstack pyeval prevnonblank readfile cindent filereadable changenr '+'exp'},illegal:/;/,contains:[hljs.NUMBER_MODE,{className:'string',begin:'\'',end:'\'',illegal:'\\n'},{className:'string',begin:/"(\\"|\n\\|[^"\n])*"/},hljs.COMMENT('"','$'),{className:'variable',begin:/[bwtglsav]:[\w\d_]+/},{begin:[/\b(?:function|function!)/,/\s+/,hljs.IDENT_RE],className:{1:"keyword",3:"title"},end:'$',relevance:0,contains:[{className:'params',begin:'\\(',end:'\\)'}]},{className:'symbol',begin:/<[\w-]+>/}]}}
return vim})();hljs.registerLanguage('vim',hljsGrammar)})();/*! `xml` grammar compiled for Highlight.js 11.9.0 */
(function(){var hljsGrammar=(function(){'use strict';function xml(hljs){const regex=hljs.regex;const TAG_NAME_RE=regex.concat(/[\p{L}_]/u,regex.optional(/[\p{L}0-9_.-]*:/u),/[\p{L}0-9_.-]*/u);const XML_IDENT_RE=/[\p{L}0-9._:-]+/u;const XML_ENTITIES={className:'symbol',begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/};const XML_META_KEYWORDS={begin:/\s/,contains:[{className:'keyword',begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]};const XML_META_PAR_KEYWORDS=hljs.inherit(XML_META_KEYWORDS,{begin:/\(/,end:/\)/});const APOS_META_STRING_MODE=hljs.inherit(hljs.APOS_STRING_MODE,{className:'string'});const QUOTE_META_STRING_MODE=hljs.inherit(hljs.QUOTE_STRING_MODE,{className:'string'});const TAG_INTERNALS={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:'attr',begin:XML_IDENT_RE,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:'string',endsParent:!0,variants:[{begin:/"/,end:/"/,contains:[XML_ENTITIES]},{begin:/'/,end:/'/,contains:[XML_ENTITIES]},{begin:/[^\s"'=<>`]+/}]}]}]};return{name:'HTML, XML',aliases:['html','xhtml','rss','atom','xjb','xsd','xsl','plist','wsf','svg'],case_insensitive:!0,unicodeRegex:!0,contains:[{className:'meta',begin:/<![a-z]/,end:/>/,relevance:10,contains:[XML_META_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE,XML_META_PAR_KEYWORDS,{begin:/\[/,end:/\]/,contains:[{className:'meta',begin:/<![a-z]/,end:/>/,contains:[XML_META_KEYWORDS,XML_META_PAR_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE]}]}]},hljs.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},XML_ENTITIES,{className:'meta',end:/\?>/,variants:[{begin:/<\?xml/,relevance:10,contains:[QUOTE_META_STRING_MODE]},{begin:/<\?[a-z][a-z0-9]+/,}]},{className:'tag',begin:/<style(?=\s|>)/,end:/>/,keywords:{name:'style'},contains:[TAG_INTERNALS],starts:{end:/<\/style>/,returnEnd:!0,subLanguage:['css','xml']}},{className:'tag',begin:/<script(?=\s|>)/,end:/>/,keywords:{name:'script'},contains:[TAG_INTERNALS],starts:{end:/<\/script>/,returnEnd:!0,subLanguage:['javascript','handlebars','xml']}},{className:'tag',begin:/<>|<\/>/},{className:'tag',begin:regex.concat(/</,regex.lookahead(regex.concat(TAG_NAME_RE,regex.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:'name',begin:TAG_NAME_RE,relevance:0,starts:TAG_INTERNALS}]},{className:'tag',begin:regex.concat(/<\//,regex.lookahead(regex.concat(TAG_NAME_RE,/>/))),contains:[{className:'name',begin:TAG_NAME_RE,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}
return xml})();hljs.registerLanguage('xml',hljsGrammar)})()
